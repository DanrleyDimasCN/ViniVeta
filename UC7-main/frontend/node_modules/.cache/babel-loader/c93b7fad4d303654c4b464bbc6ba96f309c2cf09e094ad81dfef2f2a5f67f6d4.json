{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Danrley\\\\Documents\\\\ViniVeta\\\\UC7-main\\\\frontend\\\\src\\\\Contexts\\\\authContexts.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState } from 'react';\nimport apiLocal from '../services/api';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AutenticadoContexto = /*#__PURE__*/createContext();\nexport default function AuthProvider({\n  children\n}) {\n  _s();\n  const [tokenT, setTokenT] = useState(false);\n  const [token, setToken] = useState('');\n  const [usuarioId, setUsuarioId] = useState(null);\n  const [listaId, setListaId] = useState(null);\n  const autenticado = !!tokenT;\n  async function verificarToken() {\n    const iToken = localStorage.getItem('@token');\n    if (!iToken) {\n      setTokenT(false);\n      return;\n    }\n    const tokenU = JSON.parse(iToken);\n    setToken(tokenU);\n    try {\n      const resposta = await apiLocal.get('/VerificaToken', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (resposta.data.id) {\n        const listaIdLocal = localStorage.getItem('@listaId');\n        if (listaIdLocal) {\n          setListaId(JSON.parse(listaIdLocal));\n        }\n        setTokenT(true);\n        setsuario(resposta.data.id);\n        localStorage.setItem('@id', JSON.stringify(resposta.data.id));\n        localStorage.setItem('@nome', JSON.stringify(resposta.data.nome));\n      }\n    } catch (err) {\n      console.error(\"Erro ao verificar token:\", err);\n    }\n  }\n  const setListaIdContext = id => {\n    setListaId(id);\n    localStorage.setItem('@listaId', JSON.stringify(id));\n  };\n  async function loginEntrada(email, password) {\n    try {\n      const resposta = await apiLocal.post('/LoginUsuarios', {\n        email,\n        password\n      });\n      localStorage.setItem('@id', JSON.stringify(resposta.data.id));\n      localStorage.setItem('@token', JSON.stringify(resposta.data.token));\n      localStorage.setItem('@nome', JSON.stringify(resposta.data.nome));\n      localStorage.setItem('@listaId', JSON.stringify(resposta.data.listaId));\n      setTokenT(true);\n      setIdUsuario(resposta.data.id);\n      setListaId(resposta.data.listaId);\n    } catch (err) {\n      toast.error('Erro de Comunicação');\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(AutenticadoContexto.Provider, {\n    value: {\n      autenticado,\n      loginEntrada,\n      verificarToken,\n      token,\n      usuarioId,\n      listaId,\n      setListaIdContext\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n}\n_s(AuthProvider, \"gx2RkzJjvAYTsHRm9F6z1xkZsu4=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useState","apiLocal","toast","jsxDEV","_jsxDEV","AutenticadoContexto","AuthProvider","children","_s","tokenT","setTokenT","token","setToken","usuarioId","setUsuarioId","listaId","setListaId","autenticado","verificarToken","iToken","localStorage","getItem","tokenU","JSON","parse","resposta","get","headers","Authorization","data","id","listaIdLocal","setsuario","setItem","stringify","nome","err","console","error","setListaIdContext","loginEntrada","email","password","post","setIdUsuario","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Danrley/Documents/ViniVeta/UC7-main/frontend/src/Contexts/authContexts.js"],"sourcesContent":["import { createContext, useState } from 'react'\r\nimport apiLocal from '../services/api'\r\nimport { toast } from 'react-toastify'\r\n\r\nexport const AutenticadoContexto = createContext()\r\n\r\nexport default function AuthProvider({ children }) {\r\n\r\n    const [tokenT, setTokenT] = useState(false)\r\n    const [token, setToken] = useState('')\r\n    const [usuarioId, setUsuarioId] = useState(null)\r\n    const [listaId, setListaId] = useState(null);\r\n\r\n    const autenticado = !!tokenT\r\n\r\n    async function verificarToken() {\r\n        const iToken = localStorage.getItem('@token')\r\n        if (!iToken) {\r\n            setTokenT(false)\r\n            return\r\n        }\r\n        const tokenU = JSON.parse(iToken)\r\n        setToken(tokenU)\r\n        try {\r\n            const resposta = await apiLocal.get('/VerificaToken', {\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`\r\n                }\r\n            })\r\n            if (resposta.data.id) {\r\n                const listaIdLocal = localStorage.getItem('@listaId');\r\n                if (listaIdLocal) {\r\n                    setListaId(JSON.parse(listaIdLocal));\r\n                }\r\n                setTokenT(true)\r\n                setsuario(resposta.data.id)\r\n                localStorage.setItem('@id', JSON.stringify(resposta.data.id))\r\n                localStorage.setItem('@nome', JSON.stringify(resposta.data.nome))\r\n            }\r\n        } catch (err) {\r\n            console.error(\"Erro ao verificar token:\", err)\r\n        }\r\n    }\r\n\r\n    const setListaIdContext = (id) => {\r\n        setListaId(id);\r\n        localStorage.setItem('@listaId', JSON.stringify(id));\r\n    };\r\n\r\n    async function loginEntrada(email, password) {\r\n        try {\r\n            const resposta = await apiLocal.post('/LoginUsuarios', {\r\n                email,\r\n                password\r\n            })\r\n            localStorage.setItem('@id', JSON.stringify(resposta.data.id))\r\n            localStorage.setItem('@token', JSON.stringify(resposta.data.token))\r\n            localStorage.setItem('@nome', JSON.stringify(resposta.data.nome))\r\n            localStorage.setItem('@listaId', JSON.stringify(resposta.data.listaId));\r\n            setTokenT(true)\r\n            setIdUsuario(resposta.data.id)\r\n            setListaId(resposta.data.listaId);\r\n        } catch (err) {\r\n            toast.error('Erro de Comunicação')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <AutenticadoContexto.Provider value={{ autenticado, loginEntrada, verificarToken, token, usuarioId, listaId, setListaIdContext }}>\r\n            {children}\r\n        </AutenticadoContexto.Provider>\r\n    )\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
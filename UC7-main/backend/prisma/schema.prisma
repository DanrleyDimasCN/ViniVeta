// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

enum Genero {
  MASCULINO
  FEMININO
  NAO_INFORMADO
}

model Admin {
  id         String @id @default(uuid())
  pseudoNome String @unique
  senha      String @unique

  create_at DateTime? @default(now())
  update_at DateTime? @default(now())

  @@map("cadastro_admin")
}

model Usuario {
  id              String   @id @default(uuid())
  nome            String   @db.VarChar(100)
  sobrenome       String   @db.VarChar(100)
  descricao       String?  @db.VarChar(300)
  email           String   @unique @db.VarChar(100)
  data_nascimento DateTime
  genero          Genero   @default(NAO_INFORMADO)
  password        String   @db.VarChar(100)

  // Relacionamento entre Usuario e lista
  lista Minha_Lista[] @relation("UsuarioLista")

  create_at DateTime? @default(now())
  update_at DateTime? @default(now())

  @@map("cadastrar_usuarios")
}

model Minha_Lista {
  id        String  @id @default(uuid())
  nome      String
  tipo      String
  uva       String  @db.VarChar(50)
  pais      String  @db.VarChar(100)
  regiao    String  @db.VarChar(100)
  descricao String? @db.VarChar(300)
  nota      Float
  favorito  Boolean?

  // Relacionamento entre Usuario e lista
  usuario   Usuario @relation("UsuarioLista", fields: [IdUsuario], references: [id])
  IdUsuario String

  // Relacionamento entre Minha_Lista e Vinhos
  // vinhos    Vinhos[] @relation("ListaVinhos")

  @@map("cadastro_minha_lista")
}

model Vinhos {
  id                  String  @id @default(uuid())
  nome                String  @db.VarChar(100)
  tipo                String  @db.VarChar(50)
  uva                 String  @db.VarChar(50)
  pais                String  @db.VarChar(100)
  regiao              String  @db.VarChar(100)
  descricao           String  @db.VarChar(300)
  nota_media          Float
  historia            String
  produtor            String  @db.VarChar(100)
  teor_alcoolico      String  @db.VarChar(50)
  amadurecimento      String
  harmonizacao        String
  olfativo            String
  gustativo           String
  temperatura_servico String

  // // Relacionamento entre Lista e Vinhos
  // lista               Minha_Lista @relation("ListaVinhos", fields: [IdLista], references: [id])
  // IdLista             String

  @@map("cadastro_vinhos")
}


/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model Admin
 * 
 */
export type Admin = $Result.DefaultSelection<Prisma.$AdminPayload>
/**
 * Model Usuario
 * 
 */
export type Usuario = $Result.DefaultSelection<Prisma.$UsuarioPayload>
/**
 * Model Minha_Lista
 * 
 */
export type Minha_Lista = $Result.DefaultSelection<Prisma.$Minha_ListaPayload>
/**
 * Model Vinhos
 * 
 */
export type Vinhos = $Result.DefaultSelection<Prisma.$VinhosPayload>

/**
 * Enums
 */
export namespace $Enums {
  export const Genero: {
  MASCULINO: 'MASCULINO',
  FEMININO: 'FEMININO',
  NAO_INFORMADO: 'NAO_INFORMADO'
};

export type Genero = (typeof Genero)[keyof typeof Genero]

}

export type Genero = $Enums.Genero

export const Genero: typeof $Enums.Genero

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Admins
 * const admins = await prisma.admin.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Admins
   * const admins = await prisma.admin.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb, ExtArgs, $Utils.Call<Prisma.TypeMapCb, {
    extArgs: ExtArgs
  }>, ClientOptions>

      /**
   * `prisma.admin`: Exposes CRUD operations for the **Admin** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Admins
    * const admins = await prisma.admin.findMany()
    * ```
    */
  get admin(): Prisma.AdminDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.usuario`: Exposes CRUD operations for the **Usuario** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Usuarios
    * const usuarios = await prisma.usuario.findMany()
    * ```
    */
  get usuario(): Prisma.UsuarioDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.minha_Lista`: Exposes CRUD operations for the **Minha_Lista** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Minha_Listas
    * const minha_Listas = await prisma.minha_Lista.findMany()
    * ```
    */
  get minha_Lista(): Prisma.Minha_ListaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.vinhos`: Exposes CRUD operations for the **Vinhos** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Vinhos
    * const vinhos = await prisma.vinhos.findMany()
    * ```
    */
  get vinhos(): Prisma.VinhosDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.4.1
   * Query Engine version: a9055b89e58b4b5bfb59600785423b1db3d0e75d
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    Admin: 'Admin',
    Usuario: 'Usuario',
    Minha_Lista: 'Minha_Lista',
    Vinhos: 'Vinhos'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb extends $Utils.Fn<{extArgs: $Extensions.InternalArgs, clientOptions: PrismaClientOptions }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], this['params']['clientOptions']>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> = {
    meta: {
      modelProps: "admin" | "usuario" | "minha_Lista" | "vinhos"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      Admin: {
        payload: Prisma.$AdminPayload<ExtArgs>
        fields: Prisma.AdminFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AdminFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdminPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AdminFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdminPayload>
          }
          findFirst: {
            args: Prisma.AdminFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdminPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AdminFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdminPayload>
          }
          findMany: {
            args: Prisma.AdminFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdminPayload>[]
          }
          create: {
            args: Prisma.AdminCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdminPayload>
          }
          createMany: {
            args: Prisma.AdminCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AdminCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdminPayload>[]
          }
          delete: {
            args: Prisma.AdminDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdminPayload>
          }
          update: {
            args: Prisma.AdminUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdminPayload>
          }
          deleteMany: {
            args: Prisma.AdminDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AdminUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.AdminUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdminPayload>[]
          }
          upsert: {
            args: Prisma.AdminUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdminPayload>
          }
          aggregate: {
            args: Prisma.AdminAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAdmin>
          }
          groupBy: {
            args: Prisma.AdminGroupByArgs<ExtArgs>
            result: $Utils.Optional<AdminGroupByOutputType>[]
          }
          count: {
            args: Prisma.AdminCountArgs<ExtArgs>
            result: $Utils.Optional<AdminCountAggregateOutputType> | number
          }
        }
      }
      Usuario: {
        payload: Prisma.$UsuarioPayload<ExtArgs>
        fields: Prisma.UsuarioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UsuarioFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UsuarioFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          findFirst: {
            args: Prisma.UsuarioFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UsuarioFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          findMany: {
            args: Prisma.UsuarioFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>[]
          }
          create: {
            args: Prisma.UsuarioCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          createMany: {
            args: Prisma.UsuarioCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UsuarioCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>[]
          }
          delete: {
            args: Prisma.UsuarioDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          update: {
            args: Prisma.UsuarioUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          deleteMany: {
            args: Prisma.UsuarioDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UsuarioUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.UsuarioUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>[]
          }
          upsert: {
            args: Prisma.UsuarioUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          aggregate: {
            args: Prisma.UsuarioAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUsuario>
          }
          groupBy: {
            args: Prisma.UsuarioGroupByArgs<ExtArgs>
            result: $Utils.Optional<UsuarioGroupByOutputType>[]
          }
          count: {
            args: Prisma.UsuarioCountArgs<ExtArgs>
            result: $Utils.Optional<UsuarioCountAggregateOutputType> | number
          }
        }
      }
      Minha_Lista: {
        payload: Prisma.$Minha_ListaPayload<ExtArgs>
        fields: Prisma.Minha_ListaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.Minha_ListaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Minha_ListaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.Minha_ListaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Minha_ListaPayload>
          }
          findFirst: {
            args: Prisma.Minha_ListaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Minha_ListaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.Minha_ListaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Minha_ListaPayload>
          }
          findMany: {
            args: Prisma.Minha_ListaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Minha_ListaPayload>[]
          }
          create: {
            args: Prisma.Minha_ListaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Minha_ListaPayload>
          }
          createMany: {
            args: Prisma.Minha_ListaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.Minha_ListaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Minha_ListaPayload>[]
          }
          delete: {
            args: Prisma.Minha_ListaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Minha_ListaPayload>
          }
          update: {
            args: Prisma.Minha_ListaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Minha_ListaPayload>
          }
          deleteMany: {
            args: Prisma.Minha_ListaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.Minha_ListaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.Minha_ListaUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Minha_ListaPayload>[]
          }
          upsert: {
            args: Prisma.Minha_ListaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Minha_ListaPayload>
          }
          aggregate: {
            args: Prisma.Minha_ListaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMinha_Lista>
          }
          groupBy: {
            args: Prisma.Minha_ListaGroupByArgs<ExtArgs>
            result: $Utils.Optional<Minha_ListaGroupByOutputType>[]
          }
          count: {
            args: Prisma.Minha_ListaCountArgs<ExtArgs>
            result: $Utils.Optional<Minha_ListaCountAggregateOutputType> | number
          }
        }
      }
      Vinhos: {
        payload: Prisma.$VinhosPayload<ExtArgs>
        fields: Prisma.VinhosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.VinhosFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VinhosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.VinhosFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VinhosPayload>
          }
          findFirst: {
            args: Prisma.VinhosFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VinhosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.VinhosFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VinhosPayload>
          }
          findMany: {
            args: Prisma.VinhosFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VinhosPayload>[]
          }
          create: {
            args: Prisma.VinhosCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VinhosPayload>
          }
          createMany: {
            args: Prisma.VinhosCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.VinhosCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VinhosPayload>[]
          }
          delete: {
            args: Prisma.VinhosDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VinhosPayload>
          }
          update: {
            args: Prisma.VinhosUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VinhosPayload>
          }
          deleteMany: {
            args: Prisma.VinhosDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.VinhosUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.VinhosUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VinhosPayload>[]
          }
          upsert: {
            args: Prisma.VinhosUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VinhosPayload>
          }
          aggregate: {
            args: Prisma.VinhosAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateVinhos>
          }
          groupBy: {
            args: Prisma.VinhosGroupByArgs<ExtArgs>
            result: $Utils.Optional<VinhosGroupByOutputType>[]
          }
          count: {
            args: Prisma.VinhosCountArgs<ExtArgs>
            result: $Utils.Optional<VinhosCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    admin?: AdminOmit
    usuario?: UsuarioOmit
    minha_Lista?: Minha_ListaOmit
    vinhos?: VinhosOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type UsuarioCountOutputType
   */

  export type UsuarioCountOutputType = {
    lista: number
  }

  export type UsuarioCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    lista?: boolean | UsuarioCountOutputTypeCountListaArgs
  }

  // Custom InputTypes
  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioCountOutputType
     */
    select?: UsuarioCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountListaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Minha_ListaWhereInput
  }


  /**
   * Count Type Minha_ListaCountOutputType
   */

  export type Minha_ListaCountOutputType = {
    vinhos: number
  }

  export type Minha_ListaCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    vinhos?: boolean | Minha_ListaCountOutputTypeCountVinhosArgs
  }

  // Custom InputTypes
  /**
   * Minha_ListaCountOutputType without action
   */
  export type Minha_ListaCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Minha_ListaCountOutputType
     */
    select?: Minha_ListaCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Minha_ListaCountOutputType without action
   */
  export type Minha_ListaCountOutputTypeCountVinhosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: VinhosWhereInput
  }


  /**
   * Models
   */

  /**
   * Model Admin
   */

  export type AggregateAdmin = {
    _count: AdminCountAggregateOutputType | null
    _min: AdminMinAggregateOutputType | null
    _max: AdminMaxAggregateOutputType | null
  }

  export type AdminMinAggregateOutputType = {
    id: string | null
    pseudoNome: string | null
    senha: string | null
    create_at: Date | null
    update_at: Date | null
  }

  export type AdminMaxAggregateOutputType = {
    id: string | null
    pseudoNome: string | null
    senha: string | null
    create_at: Date | null
    update_at: Date | null
  }

  export type AdminCountAggregateOutputType = {
    id: number
    pseudoNome: number
    senha: number
    create_at: number
    update_at: number
    _all: number
  }


  export type AdminMinAggregateInputType = {
    id?: true
    pseudoNome?: true
    senha?: true
    create_at?: true
    update_at?: true
  }

  export type AdminMaxAggregateInputType = {
    id?: true
    pseudoNome?: true
    senha?: true
    create_at?: true
    update_at?: true
  }

  export type AdminCountAggregateInputType = {
    id?: true
    pseudoNome?: true
    senha?: true
    create_at?: true
    update_at?: true
    _all?: true
  }

  export type AdminAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Admin to aggregate.
     */
    where?: AdminWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Admins to fetch.
     */
    orderBy?: AdminOrderByWithRelationInput | AdminOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AdminWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Admins from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Admins.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Admins
    **/
    _count?: true | AdminCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AdminMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AdminMaxAggregateInputType
  }

  export type GetAdminAggregateType<T extends AdminAggregateArgs> = {
        [P in keyof T & keyof AggregateAdmin]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAdmin[P]>
      : GetScalarType<T[P], AggregateAdmin[P]>
  }




  export type AdminGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AdminWhereInput
    orderBy?: AdminOrderByWithAggregationInput | AdminOrderByWithAggregationInput[]
    by: AdminScalarFieldEnum[] | AdminScalarFieldEnum
    having?: AdminScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AdminCountAggregateInputType | true
    _min?: AdminMinAggregateInputType
    _max?: AdminMaxAggregateInputType
  }

  export type AdminGroupByOutputType = {
    id: string
    pseudoNome: string
    senha: string
    create_at: Date | null
    update_at: Date | null
    _count: AdminCountAggregateOutputType | null
    _min: AdminMinAggregateOutputType | null
    _max: AdminMaxAggregateOutputType | null
  }

  type GetAdminGroupByPayload<T extends AdminGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AdminGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AdminGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AdminGroupByOutputType[P]>
            : GetScalarType<T[P], AdminGroupByOutputType[P]>
        }
      >
    >


  export type AdminSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    pseudoNome?: boolean
    senha?: boolean
    create_at?: boolean
    update_at?: boolean
  }, ExtArgs["result"]["admin"]>

  export type AdminSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    pseudoNome?: boolean
    senha?: boolean
    create_at?: boolean
    update_at?: boolean
  }, ExtArgs["result"]["admin"]>

  export type AdminSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    pseudoNome?: boolean
    senha?: boolean
    create_at?: boolean
    update_at?: boolean
  }, ExtArgs["result"]["admin"]>

  export type AdminSelectScalar = {
    id?: boolean
    pseudoNome?: boolean
    senha?: boolean
    create_at?: boolean
    update_at?: boolean
  }

  export type AdminOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "pseudoNome" | "senha" | "create_at" | "update_at", ExtArgs["result"]["admin"]>

  export type $AdminPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Admin"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      pseudoNome: string
      senha: string
      create_at: Date | null
      update_at: Date | null
    }, ExtArgs["result"]["admin"]>
    composites: {}
  }

  type AdminGetPayload<S extends boolean | null | undefined | AdminDefaultArgs> = $Result.GetResult<Prisma.$AdminPayload, S>

  type AdminCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<AdminFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AdminCountAggregateInputType | true
    }

  export interface AdminDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Admin'], meta: { name: 'Admin' } }
    /**
     * Find zero or one Admin that matches the filter.
     * @param {AdminFindUniqueArgs} args - Arguments to find a Admin
     * @example
     * // Get one Admin
     * const admin = await prisma.admin.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AdminFindUniqueArgs>(args: SelectSubset<T, AdminFindUniqueArgs<ExtArgs>>): Prisma__AdminClient<$Result.GetResult<Prisma.$AdminPayload<ExtArgs>, T, "findUnique", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find one Admin that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {AdminFindUniqueOrThrowArgs} args - Arguments to find a Admin
     * @example
     * // Get one Admin
     * const admin = await prisma.admin.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AdminFindUniqueOrThrowArgs>(args: SelectSubset<T, AdminFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AdminClient<$Result.GetResult<Prisma.$AdminPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find the first Admin that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdminFindFirstArgs} args - Arguments to find a Admin
     * @example
     * // Get one Admin
     * const admin = await prisma.admin.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AdminFindFirstArgs>(args?: SelectSubset<T, AdminFindFirstArgs<ExtArgs>>): Prisma__AdminClient<$Result.GetResult<Prisma.$AdminPayload<ExtArgs>, T, "findFirst", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find the first Admin that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdminFindFirstOrThrowArgs} args - Arguments to find a Admin
     * @example
     * // Get one Admin
     * const admin = await prisma.admin.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AdminFindFirstOrThrowArgs>(args?: SelectSubset<T, AdminFindFirstOrThrowArgs<ExtArgs>>): Prisma__AdminClient<$Result.GetResult<Prisma.$AdminPayload<ExtArgs>, T, "findFirstOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find zero or more Admins that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdminFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Admins
     * const admins = await prisma.admin.findMany()
     * 
     * // Get first 10 Admins
     * const admins = await prisma.admin.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const adminWithIdOnly = await prisma.admin.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AdminFindManyArgs>(args?: SelectSubset<T, AdminFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AdminPayload<ExtArgs>, T, "findMany", ClientOptions>>

    /**
     * Create a Admin.
     * @param {AdminCreateArgs} args - Arguments to create a Admin.
     * @example
     * // Create one Admin
     * const Admin = await prisma.admin.create({
     *   data: {
     *     // ... data to create a Admin
     *   }
     * })
     * 
     */
    create<T extends AdminCreateArgs>(args: SelectSubset<T, AdminCreateArgs<ExtArgs>>): Prisma__AdminClient<$Result.GetResult<Prisma.$AdminPayload<ExtArgs>, T, "create", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Create many Admins.
     * @param {AdminCreateManyArgs} args - Arguments to create many Admins.
     * @example
     * // Create many Admins
     * const admin = await prisma.admin.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AdminCreateManyArgs>(args?: SelectSubset<T, AdminCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Admins and returns the data saved in the database.
     * @param {AdminCreateManyAndReturnArgs} args - Arguments to create many Admins.
     * @example
     * // Create many Admins
     * const admin = await prisma.admin.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Admins and only return the `id`
     * const adminWithIdOnly = await prisma.admin.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AdminCreateManyAndReturnArgs>(args?: SelectSubset<T, AdminCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AdminPayload<ExtArgs>, T, "createManyAndReturn", ClientOptions>>

    /**
     * Delete a Admin.
     * @param {AdminDeleteArgs} args - Arguments to delete one Admin.
     * @example
     * // Delete one Admin
     * const Admin = await prisma.admin.delete({
     *   where: {
     *     // ... filter to delete one Admin
     *   }
     * })
     * 
     */
    delete<T extends AdminDeleteArgs>(args: SelectSubset<T, AdminDeleteArgs<ExtArgs>>): Prisma__AdminClient<$Result.GetResult<Prisma.$AdminPayload<ExtArgs>, T, "delete", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Update one Admin.
     * @param {AdminUpdateArgs} args - Arguments to update one Admin.
     * @example
     * // Update one Admin
     * const admin = await prisma.admin.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AdminUpdateArgs>(args: SelectSubset<T, AdminUpdateArgs<ExtArgs>>): Prisma__AdminClient<$Result.GetResult<Prisma.$AdminPayload<ExtArgs>, T, "update", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Delete zero or more Admins.
     * @param {AdminDeleteManyArgs} args - Arguments to filter Admins to delete.
     * @example
     * // Delete a few Admins
     * const { count } = await prisma.admin.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AdminDeleteManyArgs>(args?: SelectSubset<T, AdminDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Admins.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdminUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Admins
     * const admin = await prisma.admin.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AdminUpdateManyArgs>(args: SelectSubset<T, AdminUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Admins and returns the data updated in the database.
     * @param {AdminUpdateManyAndReturnArgs} args - Arguments to update many Admins.
     * @example
     * // Update many Admins
     * const admin = await prisma.admin.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Admins and only return the `id`
     * const adminWithIdOnly = await prisma.admin.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends AdminUpdateManyAndReturnArgs>(args: SelectSubset<T, AdminUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AdminPayload<ExtArgs>, T, "updateManyAndReturn", ClientOptions>>

    /**
     * Create or update one Admin.
     * @param {AdminUpsertArgs} args - Arguments to update or create a Admin.
     * @example
     * // Update or create a Admin
     * const admin = await prisma.admin.upsert({
     *   create: {
     *     // ... data to create a Admin
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Admin we want to update
     *   }
     * })
     */
    upsert<T extends AdminUpsertArgs>(args: SelectSubset<T, AdminUpsertArgs<ExtArgs>>): Prisma__AdminClient<$Result.GetResult<Prisma.$AdminPayload<ExtArgs>, T, "upsert", ClientOptions>, never, ExtArgs, ClientOptions>


    /**
     * Count the number of Admins.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdminCountArgs} args - Arguments to filter Admins to count.
     * @example
     * // Count the number of Admins
     * const count = await prisma.admin.count({
     *   where: {
     *     // ... the filter for the Admins we want to count
     *   }
     * })
    **/
    count<T extends AdminCountArgs>(
      args?: Subset<T, AdminCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AdminCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Admin.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdminAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AdminAggregateArgs>(args: Subset<T, AdminAggregateArgs>): Prisma.PrismaPromise<GetAdminAggregateType<T>>

    /**
     * Group by Admin.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdminGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AdminGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AdminGroupByArgs['orderBy'] }
        : { orderBy?: AdminGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AdminGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAdminGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Admin model
   */
  readonly fields: AdminFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Admin.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AdminClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Admin model
   */ 
  interface AdminFieldRefs {
    readonly id: FieldRef<"Admin", 'String'>
    readonly pseudoNome: FieldRef<"Admin", 'String'>
    readonly senha: FieldRef<"Admin", 'String'>
    readonly create_at: FieldRef<"Admin", 'DateTime'>
    readonly update_at: FieldRef<"Admin", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Admin findUnique
   */
  export type AdminFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admin
     */
    select?: AdminSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Admin
     */
    omit?: AdminOmit<ExtArgs> | null
    /**
     * Filter, which Admin to fetch.
     */
    where: AdminWhereUniqueInput
  }

  /**
   * Admin findUniqueOrThrow
   */
  export type AdminFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admin
     */
    select?: AdminSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Admin
     */
    omit?: AdminOmit<ExtArgs> | null
    /**
     * Filter, which Admin to fetch.
     */
    where: AdminWhereUniqueInput
  }

  /**
   * Admin findFirst
   */
  export type AdminFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admin
     */
    select?: AdminSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Admin
     */
    omit?: AdminOmit<ExtArgs> | null
    /**
     * Filter, which Admin to fetch.
     */
    where?: AdminWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Admins to fetch.
     */
    orderBy?: AdminOrderByWithRelationInput | AdminOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Admins.
     */
    cursor?: AdminWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Admins from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Admins.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Admins.
     */
    distinct?: AdminScalarFieldEnum | AdminScalarFieldEnum[]
  }

  /**
   * Admin findFirstOrThrow
   */
  export type AdminFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admin
     */
    select?: AdminSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Admin
     */
    omit?: AdminOmit<ExtArgs> | null
    /**
     * Filter, which Admin to fetch.
     */
    where?: AdminWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Admins to fetch.
     */
    orderBy?: AdminOrderByWithRelationInput | AdminOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Admins.
     */
    cursor?: AdminWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Admins from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Admins.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Admins.
     */
    distinct?: AdminScalarFieldEnum | AdminScalarFieldEnum[]
  }

  /**
   * Admin findMany
   */
  export type AdminFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admin
     */
    select?: AdminSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Admin
     */
    omit?: AdminOmit<ExtArgs> | null
    /**
     * Filter, which Admins to fetch.
     */
    where?: AdminWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Admins to fetch.
     */
    orderBy?: AdminOrderByWithRelationInput | AdminOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Admins.
     */
    cursor?: AdminWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Admins from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Admins.
     */
    skip?: number
    distinct?: AdminScalarFieldEnum | AdminScalarFieldEnum[]
  }

  /**
   * Admin create
   */
  export type AdminCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admin
     */
    select?: AdminSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Admin
     */
    omit?: AdminOmit<ExtArgs> | null
    /**
     * The data needed to create a Admin.
     */
    data: XOR<AdminCreateInput, AdminUncheckedCreateInput>
  }

  /**
   * Admin createMany
   */
  export type AdminCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Admins.
     */
    data: AdminCreateManyInput | AdminCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Admin createManyAndReturn
   */
  export type AdminCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admin
     */
    select?: AdminSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Admin
     */
    omit?: AdminOmit<ExtArgs> | null
    /**
     * The data used to create many Admins.
     */
    data: AdminCreateManyInput | AdminCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Admin update
   */
  export type AdminUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admin
     */
    select?: AdminSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Admin
     */
    omit?: AdminOmit<ExtArgs> | null
    /**
     * The data needed to update a Admin.
     */
    data: XOR<AdminUpdateInput, AdminUncheckedUpdateInput>
    /**
     * Choose, which Admin to update.
     */
    where: AdminWhereUniqueInput
  }

  /**
   * Admin updateMany
   */
  export type AdminUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Admins.
     */
    data: XOR<AdminUpdateManyMutationInput, AdminUncheckedUpdateManyInput>
    /**
     * Filter which Admins to update
     */
    where?: AdminWhereInput
    /**
     * Limit how many Admins to update.
     */
    limit?: number
  }

  /**
   * Admin updateManyAndReturn
   */
  export type AdminUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admin
     */
    select?: AdminSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Admin
     */
    omit?: AdminOmit<ExtArgs> | null
    /**
     * The data used to update Admins.
     */
    data: XOR<AdminUpdateManyMutationInput, AdminUncheckedUpdateManyInput>
    /**
     * Filter which Admins to update
     */
    where?: AdminWhereInput
    /**
     * Limit how many Admins to update.
     */
    limit?: number
  }

  /**
   * Admin upsert
   */
  export type AdminUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admin
     */
    select?: AdminSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Admin
     */
    omit?: AdminOmit<ExtArgs> | null
    /**
     * The filter to search for the Admin to update in case it exists.
     */
    where: AdminWhereUniqueInput
    /**
     * In case the Admin found by the `where` argument doesn't exist, create a new Admin with this data.
     */
    create: XOR<AdminCreateInput, AdminUncheckedCreateInput>
    /**
     * In case the Admin was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AdminUpdateInput, AdminUncheckedUpdateInput>
  }

  /**
   * Admin delete
   */
  export type AdminDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admin
     */
    select?: AdminSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Admin
     */
    omit?: AdminOmit<ExtArgs> | null
    /**
     * Filter which Admin to delete.
     */
    where: AdminWhereUniqueInput
  }

  /**
   * Admin deleteMany
   */
  export type AdminDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Admins to delete
     */
    where?: AdminWhereInput
    /**
     * Limit how many Admins to delete.
     */
    limit?: number
  }

  /**
   * Admin without action
   */
  export type AdminDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admin
     */
    select?: AdminSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Admin
     */
    omit?: AdminOmit<ExtArgs> | null
  }


  /**
   * Model Usuario
   */

  export type AggregateUsuario = {
    _count: UsuarioCountAggregateOutputType | null
    _min: UsuarioMinAggregateOutputType | null
    _max: UsuarioMaxAggregateOutputType | null
  }

  export type UsuarioMinAggregateOutputType = {
    id: string | null
    nome: string | null
    sobrenome: string | null
    descricao: string | null
    email: string | null
    data_nascimento: Date | null
    genero: $Enums.Genero | null
    password: string | null
    create_at: Date | null
    update_at: Date | null
  }

  export type UsuarioMaxAggregateOutputType = {
    id: string | null
    nome: string | null
    sobrenome: string | null
    descricao: string | null
    email: string | null
    data_nascimento: Date | null
    genero: $Enums.Genero | null
    password: string | null
    create_at: Date | null
    update_at: Date | null
  }

  export type UsuarioCountAggregateOutputType = {
    id: number
    nome: number
    sobrenome: number
    descricao: number
    email: number
    data_nascimento: number
    genero: number
    password: number
    create_at: number
    update_at: number
    _all: number
  }


  export type UsuarioMinAggregateInputType = {
    id?: true
    nome?: true
    sobrenome?: true
    descricao?: true
    email?: true
    data_nascimento?: true
    genero?: true
    password?: true
    create_at?: true
    update_at?: true
  }

  export type UsuarioMaxAggregateInputType = {
    id?: true
    nome?: true
    sobrenome?: true
    descricao?: true
    email?: true
    data_nascimento?: true
    genero?: true
    password?: true
    create_at?: true
    update_at?: true
  }

  export type UsuarioCountAggregateInputType = {
    id?: true
    nome?: true
    sobrenome?: true
    descricao?: true
    email?: true
    data_nascimento?: true
    genero?: true
    password?: true
    create_at?: true
    update_at?: true
    _all?: true
  }

  export type UsuarioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Usuario to aggregate.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Usuarios
    **/
    _count?: true | UsuarioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UsuarioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UsuarioMaxAggregateInputType
  }

  export type GetUsuarioAggregateType<T extends UsuarioAggregateArgs> = {
        [P in keyof T & keyof AggregateUsuario]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUsuario[P]>
      : GetScalarType<T[P], AggregateUsuario[P]>
  }




  export type UsuarioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UsuarioWhereInput
    orderBy?: UsuarioOrderByWithAggregationInput | UsuarioOrderByWithAggregationInput[]
    by: UsuarioScalarFieldEnum[] | UsuarioScalarFieldEnum
    having?: UsuarioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UsuarioCountAggregateInputType | true
    _min?: UsuarioMinAggregateInputType
    _max?: UsuarioMaxAggregateInputType
  }

  export type UsuarioGroupByOutputType = {
    id: string
    nome: string
    sobrenome: string
    descricao: string | null
    email: string
    data_nascimento: Date
    genero: $Enums.Genero
    password: string
    create_at: Date | null
    update_at: Date | null
    _count: UsuarioCountAggregateOutputType | null
    _min: UsuarioMinAggregateOutputType | null
    _max: UsuarioMaxAggregateOutputType | null
  }

  type GetUsuarioGroupByPayload<T extends UsuarioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UsuarioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UsuarioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UsuarioGroupByOutputType[P]>
            : GetScalarType<T[P], UsuarioGroupByOutputType[P]>
        }
      >
    >


  export type UsuarioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    sobrenome?: boolean
    descricao?: boolean
    email?: boolean
    data_nascimento?: boolean
    genero?: boolean
    password?: boolean
    create_at?: boolean
    update_at?: boolean
    lista?: boolean | Usuario$listaArgs<ExtArgs>
    _count?: boolean | UsuarioCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["usuario"]>

  export type UsuarioSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    sobrenome?: boolean
    descricao?: boolean
    email?: boolean
    data_nascimento?: boolean
    genero?: boolean
    password?: boolean
    create_at?: boolean
    update_at?: boolean
  }, ExtArgs["result"]["usuario"]>

  export type UsuarioSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    sobrenome?: boolean
    descricao?: boolean
    email?: boolean
    data_nascimento?: boolean
    genero?: boolean
    password?: boolean
    create_at?: boolean
    update_at?: boolean
  }, ExtArgs["result"]["usuario"]>

  export type UsuarioSelectScalar = {
    id?: boolean
    nome?: boolean
    sobrenome?: boolean
    descricao?: boolean
    email?: boolean
    data_nascimento?: boolean
    genero?: boolean
    password?: boolean
    create_at?: boolean
    update_at?: boolean
  }

  export type UsuarioOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nome" | "sobrenome" | "descricao" | "email" | "data_nascimento" | "genero" | "password" | "create_at" | "update_at", ExtArgs["result"]["usuario"]>
  export type UsuarioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    lista?: boolean | Usuario$listaArgs<ExtArgs>
    _count?: boolean | UsuarioCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type UsuarioIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type UsuarioIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $UsuarioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Usuario"
    objects: {
      lista: Prisma.$Minha_ListaPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      nome: string
      sobrenome: string
      descricao: string | null
      email: string
      data_nascimento: Date
      genero: $Enums.Genero
      password: string
      create_at: Date | null
      update_at: Date | null
    }, ExtArgs["result"]["usuario"]>
    composites: {}
  }

  type UsuarioGetPayload<S extends boolean | null | undefined | UsuarioDefaultArgs> = $Result.GetResult<Prisma.$UsuarioPayload, S>

  type UsuarioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UsuarioFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UsuarioCountAggregateInputType | true
    }

  export interface UsuarioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Usuario'], meta: { name: 'Usuario' } }
    /**
     * Find zero or one Usuario that matches the filter.
     * @param {UsuarioFindUniqueArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UsuarioFindUniqueArgs>(args: SelectSubset<T, UsuarioFindUniqueArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUnique", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find one Usuario that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UsuarioFindUniqueOrThrowArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UsuarioFindUniqueOrThrowArgs>(args: SelectSubset<T, UsuarioFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find the first Usuario that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioFindFirstArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UsuarioFindFirstArgs>(args?: SelectSubset<T, UsuarioFindFirstArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findFirst", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find the first Usuario that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioFindFirstOrThrowArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UsuarioFindFirstOrThrowArgs>(args?: SelectSubset<T, UsuarioFindFirstOrThrowArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findFirstOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find zero or more Usuarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Usuarios
     * const usuarios = await prisma.usuario.findMany()
     * 
     * // Get first 10 Usuarios
     * const usuarios = await prisma.usuario.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const usuarioWithIdOnly = await prisma.usuario.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UsuarioFindManyArgs>(args?: SelectSubset<T, UsuarioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findMany", ClientOptions>>

    /**
     * Create a Usuario.
     * @param {UsuarioCreateArgs} args - Arguments to create a Usuario.
     * @example
     * // Create one Usuario
     * const Usuario = await prisma.usuario.create({
     *   data: {
     *     // ... data to create a Usuario
     *   }
     * })
     * 
     */
    create<T extends UsuarioCreateArgs>(args: SelectSubset<T, UsuarioCreateArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "create", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Create many Usuarios.
     * @param {UsuarioCreateManyArgs} args - Arguments to create many Usuarios.
     * @example
     * // Create many Usuarios
     * const usuario = await prisma.usuario.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UsuarioCreateManyArgs>(args?: SelectSubset<T, UsuarioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Usuarios and returns the data saved in the database.
     * @param {UsuarioCreateManyAndReturnArgs} args - Arguments to create many Usuarios.
     * @example
     * // Create many Usuarios
     * const usuario = await prisma.usuario.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Usuarios and only return the `id`
     * const usuarioWithIdOnly = await prisma.usuario.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UsuarioCreateManyAndReturnArgs>(args?: SelectSubset<T, UsuarioCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "createManyAndReturn", ClientOptions>>

    /**
     * Delete a Usuario.
     * @param {UsuarioDeleteArgs} args - Arguments to delete one Usuario.
     * @example
     * // Delete one Usuario
     * const Usuario = await prisma.usuario.delete({
     *   where: {
     *     // ... filter to delete one Usuario
     *   }
     * })
     * 
     */
    delete<T extends UsuarioDeleteArgs>(args: SelectSubset<T, UsuarioDeleteArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "delete", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Update one Usuario.
     * @param {UsuarioUpdateArgs} args - Arguments to update one Usuario.
     * @example
     * // Update one Usuario
     * const usuario = await prisma.usuario.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UsuarioUpdateArgs>(args: SelectSubset<T, UsuarioUpdateArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "update", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Delete zero or more Usuarios.
     * @param {UsuarioDeleteManyArgs} args - Arguments to filter Usuarios to delete.
     * @example
     * // Delete a few Usuarios
     * const { count } = await prisma.usuario.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UsuarioDeleteManyArgs>(args?: SelectSubset<T, UsuarioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Usuarios
     * const usuario = await prisma.usuario.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UsuarioUpdateManyArgs>(args: SelectSubset<T, UsuarioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Usuarios and returns the data updated in the database.
     * @param {UsuarioUpdateManyAndReturnArgs} args - Arguments to update many Usuarios.
     * @example
     * // Update many Usuarios
     * const usuario = await prisma.usuario.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Usuarios and only return the `id`
     * const usuarioWithIdOnly = await prisma.usuario.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends UsuarioUpdateManyAndReturnArgs>(args: SelectSubset<T, UsuarioUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "updateManyAndReturn", ClientOptions>>

    /**
     * Create or update one Usuario.
     * @param {UsuarioUpsertArgs} args - Arguments to update or create a Usuario.
     * @example
     * // Update or create a Usuario
     * const usuario = await prisma.usuario.upsert({
     *   create: {
     *     // ... data to create a Usuario
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Usuario we want to update
     *   }
     * })
     */
    upsert<T extends UsuarioUpsertArgs>(args: SelectSubset<T, UsuarioUpsertArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "upsert", ClientOptions>, never, ExtArgs, ClientOptions>


    /**
     * Count the number of Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioCountArgs} args - Arguments to filter Usuarios to count.
     * @example
     * // Count the number of Usuarios
     * const count = await prisma.usuario.count({
     *   where: {
     *     // ... the filter for the Usuarios we want to count
     *   }
     * })
    **/
    count<T extends UsuarioCountArgs>(
      args?: Subset<T, UsuarioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UsuarioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Usuario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UsuarioAggregateArgs>(args: Subset<T, UsuarioAggregateArgs>): Prisma.PrismaPromise<GetUsuarioAggregateType<T>>

    /**
     * Group by Usuario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UsuarioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UsuarioGroupByArgs['orderBy'] }
        : { orderBy?: UsuarioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UsuarioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUsuarioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Usuario model
   */
  readonly fields: UsuarioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Usuario.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UsuarioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    lista<T extends Usuario$listaArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$listaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Minha_ListaPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Usuario model
   */ 
  interface UsuarioFieldRefs {
    readonly id: FieldRef<"Usuario", 'String'>
    readonly nome: FieldRef<"Usuario", 'String'>
    readonly sobrenome: FieldRef<"Usuario", 'String'>
    readonly descricao: FieldRef<"Usuario", 'String'>
    readonly email: FieldRef<"Usuario", 'String'>
    readonly data_nascimento: FieldRef<"Usuario", 'DateTime'>
    readonly genero: FieldRef<"Usuario", 'Genero'>
    readonly password: FieldRef<"Usuario", 'String'>
    readonly create_at: FieldRef<"Usuario", 'DateTime'>
    readonly update_at: FieldRef<"Usuario", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Usuario findUnique
   */
  export type UsuarioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario findUniqueOrThrow
   */
  export type UsuarioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario findFirst
   */
  export type UsuarioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Usuarios.
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Usuarios.
     */
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * Usuario findFirstOrThrow
   */
  export type UsuarioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Usuarios.
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Usuarios.
     */
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * Usuario findMany
   */
  export type UsuarioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuarios to fetch.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Usuarios.
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * Usuario create
   */
  export type UsuarioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * The data needed to create a Usuario.
     */
    data: XOR<UsuarioCreateInput, UsuarioUncheckedCreateInput>
  }

  /**
   * Usuario createMany
   */
  export type UsuarioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Usuarios.
     */
    data: UsuarioCreateManyInput | UsuarioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Usuario createManyAndReturn
   */
  export type UsuarioCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * The data used to create many Usuarios.
     */
    data: UsuarioCreateManyInput | UsuarioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Usuario update
   */
  export type UsuarioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * The data needed to update a Usuario.
     */
    data: XOR<UsuarioUpdateInput, UsuarioUncheckedUpdateInput>
    /**
     * Choose, which Usuario to update.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario updateMany
   */
  export type UsuarioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Usuarios.
     */
    data: XOR<UsuarioUpdateManyMutationInput, UsuarioUncheckedUpdateManyInput>
    /**
     * Filter which Usuarios to update
     */
    where?: UsuarioWhereInput
    /**
     * Limit how many Usuarios to update.
     */
    limit?: number
  }

  /**
   * Usuario updateManyAndReturn
   */
  export type UsuarioUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * The data used to update Usuarios.
     */
    data: XOR<UsuarioUpdateManyMutationInput, UsuarioUncheckedUpdateManyInput>
    /**
     * Filter which Usuarios to update
     */
    where?: UsuarioWhereInput
    /**
     * Limit how many Usuarios to update.
     */
    limit?: number
  }

  /**
   * Usuario upsert
   */
  export type UsuarioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * The filter to search for the Usuario to update in case it exists.
     */
    where: UsuarioWhereUniqueInput
    /**
     * In case the Usuario found by the `where` argument doesn't exist, create a new Usuario with this data.
     */
    create: XOR<UsuarioCreateInput, UsuarioUncheckedCreateInput>
    /**
     * In case the Usuario was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UsuarioUpdateInput, UsuarioUncheckedUpdateInput>
  }

  /**
   * Usuario delete
   */
  export type UsuarioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter which Usuario to delete.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario deleteMany
   */
  export type UsuarioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Usuarios to delete
     */
    where?: UsuarioWhereInput
    /**
     * Limit how many Usuarios to delete.
     */
    limit?: number
  }

  /**
   * Usuario.lista
   */
  export type Usuario$listaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Minha_Lista
     */
    select?: Minha_ListaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Minha_Lista
     */
    omit?: Minha_ListaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Minha_ListaInclude<ExtArgs> | null
    where?: Minha_ListaWhereInput
    orderBy?: Minha_ListaOrderByWithRelationInput | Minha_ListaOrderByWithRelationInput[]
    cursor?: Minha_ListaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Minha_ListaScalarFieldEnum | Minha_ListaScalarFieldEnum[]
  }

  /**
   * Usuario without action
   */
  export type UsuarioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
  }


  /**
   * Model Minha_Lista
   */

  export type AggregateMinha_Lista = {
    _count: Minha_ListaCountAggregateOutputType | null
    _avg: Minha_ListaAvgAggregateOutputType | null
    _sum: Minha_ListaSumAggregateOutputType | null
    _min: Minha_ListaMinAggregateOutputType | null
    _max: Minha_ListaMaxAggregateOutputType | null
  }

  export type Minha_ListaAvgAggregateOutputType = {
    nota: number | null
  }

  export type Minha_ListaSumAggregateOutputType = {
    nota: number | null
  }

  export type Minha_ListaMinAggregateOutputType = {
    id: string | null
    nome: string | null
    tipo: string | null
    uva: string | null
    pais: string | null
    regiao: string | null
    descricao: string | null
    nota: number | null
    favorito: boolean | null
    IdUsuario: string | null
  }

  export type Minha_ListaMaxAggregateOutputType = {
    id: string | null
    nome: string | null
    tipo: string | null
    uva: string | null
    pais: string | null
    regiao: string | null
    descricao: string | null
    nota: number | null
    favorito: boolean | null
    IdUsuario: string | null
  }

  export type Minha_ListaCountAggregateOutputType = {
    id: number
    nome: number
    tipo: number
    uva: number
    pais: number
    regiao: number
    descricao: number
    nota: number
    favorito: number
    IdUsuario: number
    _all: number
  }


  export type Minha_ListaAvgAggregateInputType = {
    nota?: true
  }

  export type Minha_ListaSumAggregateInputType = {
    nota?: true
  }

  export type Minha_ListaMinAggregateInputType = {
    id?: true
    nome?: true
    tipo?: true
    uva?: true
    pais?: true
    regiao?: true
    descricao?: true
    nota?: true
    favorito?: true
    IdUsuario?: true
  }

  export type Minha_ListaMaxAggregateInputType = {
    id?: true
    nome?: true
    tipo?: true
    uva?: true
    pais?: true
    regiao?: true
    descricao?: true
    nota?: true
    favorito?: true
    IdUsuario?: true
  }

  export type Minha_ListaCountAggregateInputType = {
    id?: true
    nome?: true
    tipo?: true
    uva?: true
    pais?: true
    regiao?: true
    descricao?: true
    nota?: true
    favorito?: true
    IdUsuario?: true
    _all?: true
  }

  export type Minha_ListaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Minha_Lista to aggregate.
     */
    where?: Minha_ListaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Minha_Listas to fetch.
     */
    orderBy?: Minha_ListaOrderByWithRelationInput | Minha_ListaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: Minha_ListaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Minha_Listas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Minha_Listas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Minha_Listas
    **/
    _count?: true | Minha_ListaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Minha_ListaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Minha_ListaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Minha_ListaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Minha_ListaMaxAggregateInputType
  }

  export type GetMinha_ListaAggregateType<T extends Minha_ListaAggregateArgs> = {
        [P in keyof T & keyof AggregateMinha_Lista]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMinha_Lista[P]>
      : GetScalarType<T[P], AggregateMinha_Lista[P]>
  }




  export type Minha_ListaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Minha_ListaWhereInput
    orderBy?: Minha_ListaOrderByWithAggregationInput | Minha_ListaOrderByWithAggregationInput[]
    by: Minha_ListaScalarFieldEnum[] | Minha_ListaScalarFieldEnum
    having?: Minha_ListaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Minha_ListaCountAggregateInputType | true
    _avg?: Minha_ListaAvgAggregateInputType
    _sum?: Minha_ListaSumAggregateInputType
    _min?: Minha_ListaMinAggregateInputType
    _max?: Minha_ListaMaxAggregateInputType
  }

  export type Minha_ListaGroupByOutputType = {
    id: string
    nome: string
    tipo: string
    uva: string
    pais: string
    regiao: string
    descricao: string | null
    nota: number
    favorito: boolean | null
    IdUsuario: string
    _count: Minha_ListaCountAggregateOutputType | null
    _avg: Minha_ListaAvgAggregateOutputType | null
    _sum: Minha_ListaSumAggregateOutputType | null
    _min: Minha_ListaMinAggregateOutputType | null
    _max: Minha_ListaMaxAggregateOutputType | null
  }

  type GetMinha_ListaGroupByPayload<T extends Minha_ListaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Minha_ListaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Minha_ListaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Minha_ListaGroupByOutputType[P]>
            : GetScalarType<T[P], Minha_ListaGroupByOutputType[P]>
        }
      >
    >


  export type Minha_ListaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    tipo?: boolean
    uva?: boolean
    pais?: boolean
    regiao?: boolean
    descricao?: boolean
    nota?: boolean
    favorito?: boolean
    IdUsuario?: boolean
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    vinhos?: boolean | Minha_Lista$vinhosArgs<ExtArgs>
    _count?: boolean | Minha_ListaCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["minha_Lista"]>

  export type Minha_ListaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    tipo?: boolean
    uva?: boolean
    pais?: boolean
    regiao?: boolean
    descricao?: boolean
    nota?: boolean
    favorito?: boolean
    IdUsuario?: boolean
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["minha_Lista"]>

  export type Minha_ListaSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    tipo?: boolean
    uva?: boolean
    pais?: boolean
    regiao?: boolean
    descricao?: boolean
    nota?: boolean
    favorito?: boolean
    IdUsuario?: boolean
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["minha_Lista"]>

  export type Minha_ListaSelectScalar = {
    id?: boolean
    nome?: boolean
    tipo?: boolean
    uva?: boolean
    pais?: boolean
    regiao?: boolean
    descricao?: boolean
    nota?: boolean
    favorito?: boolean
    IdUsuario?: boolean
  }

  export type Minha_ListaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nome" | "tipo" | "uva" | "pais" | "regiao" | "descricao" | "nota" | "favorito" | "IdUsuario", ExtArgs["result"]["minha_Lista"]>
  export type Minha_ListaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    vinhos?: boolean | Minha_Lista$vinhosArgs<ExtArgs>
    _count?: boolean | Minha_ListaCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type Minha_ListaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }
  export type Minha_ListaIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }

  export type $Minha_ListaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Minha_Lista"
    objects: {
      usuario: Prisma.$UsuarioPayload<ExtArgs>
      vinhos: Prisma.$VinhosPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      nome: string
      tipo: string
      uva: string
      pais: string
      regiao: string
      descricao: string | null
      nota: number
      favorito: boolean | null
      IdUsuario: string
    }, ExtArgs["result"]["minha_Lista"]>
    composites: {}
  }

  type Minha_ListaGetPayload<S extends boolean | null | undefined | Minha_ListaDefaultArgs> = $Result.GetResult<Prisma.$Minha_ListaPayload, S>

  type Minha_ListaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<Minha_ListaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Minha_ListaCountAggregateInputType | true
    }

  export interface Minha_ListaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Minha_Lista'], meta: { name: 'Minha_Lista' } }
    /**
     * Find zero or one Minha_Lista that matches the filter.
     * @param {Minha_ListaFindUniqueArgs} args - Arguments to find a Minha_Lista
     * @example
     * // Get one Minha_Lista
     * const minha_Lista = await prisma.minha_Lista.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends Minha_ListaFindUniqueArgs>(args: SelectSubset<T, Minha_ListaFindUniqueArgs<ExtArgs>>): Prisma__Minha_ListaClient<$Result.GetResult<Prisma.$Minha_ListaPayload<ExtArgs>, T, "findUnique", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find one Minha_Lista that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {Minha_ListaFindUniqueOrThrowArgs} args - Arguments to find a Minha_Lista
     * @example
     * // Get one Minha_Lista
     * const minha_Lista = await prisma.minha_Lista.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends Minha_ListaFindUniqueOrThrowArgs>(args: SelectSubset<T, Minha_ListaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__Minha_ListaClient<$Result.GetResult<Prisma.$Minha_ListaPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find the first Minha_Lista that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Minha_ListaFindFirstArgs} args - Arguments to find a Minha_Lista
     * @example
     * // Get one Minha_Lista
     * const minha_Lista = await prisma.minha_Lista.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends Minha_ListaFindFirstArgs>(args?: SelectSubset<T, Minha_ListaFindFirstArgs<ExtArgs>>): Prisma__Minha_ListaClient<$Result.GetResult<Prisma.$Minha_ListaPayload<ExtArgs>, T, "findFirst", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find the first Minha_Lista that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Minha_ListaFindFirstOrThrowArgs} args - Arguments to find a Minha_Lista
     * @example
     * // Get one Minha_Lista
     * const minha_Lista = await prisma.minha_Lista.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends Minha_ListaFindFirstOrThrowArgs>(args?: SelectSubset<T, Minha_ListaFindFirstOrThrowArgs<ExtArgs>>): Prisma__Minha_ListaClient<$Result.GetResult<Prisma.$Minha_ListaPayload<ExtArgs>, T, "findFirstOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find zero or more Minha_Listas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Minha_ListaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Minha_Listas
     * const minha_Listas = await prisma.minha_Lista.findMany()
     * 
     * // Get first 10 Minha_Listas
     * const minha_Listas = await prisma.minha_Lista.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const minha_ListaWithIdOnly = await prisma.minha_Lista.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends Minha_ListaFindManyArgs>(args?: SelectSubset<T, Minha_ListaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Minha_ListaPayload<ExtArgs>, T, "findMany", ClientOptions>>

    /**
     * Create a Minha_Lista.
     * @param {Minha_ListaCreateArgs} args - Arguments to create a Minha_Lista.
     * @example
     * // Create one Minha_Lista
     * const Minha_Lista = await prisma.minha_Lista.create({
     *   data: {
     *     // ... data to create a Minha_Lista
     *   }
     * })
     * 
     */
    create<T extends Minha_ListaCreateArgs>(args: SelectSubset<T, Minha_ListaCreateArgs<ExtArgs>>): Prisma__Minha_ListaClient<$Result.GetResult<Prisma.$Minha_ListaPayload<ExtArgs>, T, "create", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Create many Minha_Listas.
     * @param {Minha_ListaCreateManyArgs} args - Arguments to create many Minha_Listas.
     * @example
     * // Create many Minha_Listas
     * const minha_Lista = await prisma.minha_Lista.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends Minha_ListaCreateManyArgs>(args?: SelectSubset<T, Minha_ListaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Minha_Listas and returns the data saved in the database.
     * @param {Minha_ListaCreateManyAndReturnArgs} args - Arguments to create many Minha_Listas.
     * @example
     * // Create many Minha_Listas
     * const minha_Lista = await prisma.minha_Lista.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Minha_Listas and only return the `id`
     * const minha_ListaWithIdOnly = await prisma.minha_Lista.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends Minha_ListaCreateManyAndReturnArgs>(args?: SelectSubset<T, Minha_ListaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Minha_ListaPayload<ExtArgs>, T, "createManyAndReturn", ClientOptions>>

    /**
     * Delete a Minha_Lista.
     * @param {Minha_ListaDeleteArgs} args - Arguments to delete one Minha_Lista.
     * @example
     * // Delete one Minha_Lista
     * const Minha_Lista = await prisma.minha_Lista.delete({
     *   where: {
     *     // ... filter to delete one Minha_Lista
     *   }
     * })
     * 
     */
    delete<T extends Minha_ListaDeleteArgs>(args: SelectSubset<T, Minha_ListaDeleteArgs<ExtArgs>>): Prisma__Minha_ListaClient<$Result.GetResult<Prisma.$Minha_ListaPayload<ExtArgs>, T, "delete", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Update one Minha_Lista.
     * @param {Minha_ListaUpdateArgs} args - Arguments to update one Minha_Lista.
     * @example
     * // Update one Minha_Lista
     * const minha_Lista = await prisma.minha_Lista.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends Minha_ListaUpdateArgs>(args: SelectSubset<T, Minha_ListaUpdateArgs<ExtArgs>>): Prisma__Minha_ListaClient<$Result.GetResult<Prisma.$Minha_ListaPayload<ExtArgs>, T, "update", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Delete zero or more Minha_Listas.
     * @param {Minha_ListaDeleteManyArgs} args - Arguments to filter Minha_Listas to delete.
     * @example
     * // Delete a few Minha_Listas
     * const { count } = await prisma.minha_Lista.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends Minha_ListaDeleteManyArgs>(args?: SelectSubset<T, Minha_ListaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Minha_Listas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Minha_ListaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Minha_Listas
     * const minha_Lista = await prisma.minha_Lista.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends Minha_ListaUpdateManyArgs>(args: SelectSubset<T, Minha_ListaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Minha_Listas and returns the data updated in the database.
     * @param {Minha_ListaUpdateManyAndReturnArgs} args - Arguments to update many Minha_Listas.
     * @example
     * // Update many Minha_Listas
     * const minha_Lista = await prisma.minha_Lista.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Minha_Listas and only return the `id`
     * const minha_ListaWithIdOnly = await prisma.minha_Lista.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends Minha_ListaUpdateManyAndReturnArgs>(args: SelectSubset<T, Minha_ListaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Minha_ListaPayload<ExtArgs>, T, "updateManyAndReturn", ClientOptions>>

    /**
     * Create or update one Minha_Lista.
     * @param {Minha_ListaUpsertArgs} args - Arguments to update or create a Minha_Lista.
     * @example
     * // Update or create a Minha_Lista
     * const minha_Lista = await prisma.minha_Lista.upsert({
     *   create: {
     *     // ... data to create a Minha_Lista
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Minha_Lista we want to update
     *   }
     * })
     */
    upsert<T extends Minha_ListaUpsertArgs>(args: SelectSubset<T, Minha_ListaUpsertArgs<ExtArgs>>): Prisma__Minha_ListaClient<$Result.GetResult<Prisma.$Minha_ListaPayload<ExtArgs>, T, "upsert", ClientOptions>, never, ExtArgs, ClientOptions>


    /**
     * Count the number of Minha_Listas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Minha_ListaCountArgs} args - Arguments to filter Minha_Listas to count.
     * @example
     * // Count the number of Minha_Listas
     * const count = await prisma.minha_Lista.count({
     *   where: {
     *     // ... the filter for the Minha_Listas we want to count
     *   }
     * })
    **/
    count<T extends Minha_ListaCountArgs>(
      args?: Subset<T, Minha_ListaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Minha_ListaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Minha_Lista.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Minha_ListaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Minha_ListaAggregateArgs>(args: Subset<T, Minha_ListaAggregateArgs>): Prisma.PrismaPromise<GetMinha_ListaAggregateType<T>>

    /**
     * Group by Minha_Lista.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Minha_ListaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Minha_ListaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Minha_ListaGroupByArgs['orderBy'] }
        : { orderBy?: Minha_ListaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Minha_ListaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMinha_ListaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Minha_Lista model
   */
  readonly fields: Minha_ListaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Minha_Lista.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__Minha_ListaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    usuario<T extends UsuarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsuarioDefaultArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | Null, Null, ExtArgs, ClientOptions>
    vinhos<T extends Minha_Lista$vinhosArgs<ExtArgs> = {}>(args?: Subset<T, Minha_Lista$vinhosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VinhosPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Minha_Lista model
   */ 
  interface Minha_ListaFieldRefs {
    readonly id: FieldRef<"Minha_Lista", 'String'>
    readonly nome: FieldRef<"Minha_Lista", 'String'>
    readonly tipo: FieldRef<"Minha_Lista", 'String'>
    readonly uva: FieldRef<"Minha_Lista", 'String'>
    readonly pais: FieldRef<"Minha_Lista", 'String'>
    readonly regiao: FieldRef<"Minha_Lista", 'String'>
    readonly descricao: FieldRef<"Minha_Lista", 'String'>
    readonly nota: FieldRef<"Minha_Lista", 'Int'>
    readonly favorito: FieldRef<"Minha_Lista", 'Boolean'>
    readonly IdUsuario: FieldRef<"Minha_Lista", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Minha_Lista findUnique
   */
  export type Minha_ListaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Minha_Lista
     */
    select?: Minha_ListaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Minha_Lista
     */
    omit?: Minha_ListaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Minha_ListaInclude<ExtArgs> | null
    /**
     * Filter, which Minha_Lista to fetch.
     */
    where: Minha_ListaWhereUniqueInput
  }

  /**
   * Minha_Lista findUniqueOrThrow
   */
  export type Minha_ListaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Minha_Lista
     */
    select?: Minha_ListaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Minha_Lista
     */
    omit?: Minha_ListaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Minha_ListaInclude<ExtArgs> | null
    /**
     * Filter, which Minha_Lista to fetch.
     */
    where: Minha_ListaWhereUniqueInput
  }

  /**
   * Minha_Lista findFirst
   */
  export type Minha_ListaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Minha_Lista
     */
    select?: Minha_ListaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Minha_Lista
     */
    omit?: Minha_ListaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Minha_ListaInclude<ExtArgs> | null
    /**
     * Filter, which Minha_Lista to fetch.
     */
    where?: Minha_ListaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Minha_Listas to fetch.
     */
    orderBy?: Minha_ListaOrderByWithRelationInput | Minha_ListaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Minha_Listas.
     */
    cursor?: Minha_ListaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Minha_Listas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Minha_Listas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Minha_Listas.
     */
    distinct?: Minha_ListaScalarFieldEnum | Minha_ListaScalarFieldEnum[]
  }

  /**
   * Minha_Lista findFirstOrThrow
   */
  export type Minha_ListaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Minha_Lista
     */
    select?: Minha_ListaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Minha_Lista
     */
    omit?: Minha_ListaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Minha_ListaInclude<ExtArgs> | null
    /**
     * Filter, which Minha_Lista to fetch.
     */
    where?: Minha_ListaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Minha_Listas to fetch.
     */
    orderBy?: Minha_ListaOrderByWithRelationInput | Minha_ListaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Minha_Listas.
     */
    cursor?: Minha_ListaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Minha_Listas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Minha_Listas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Minha_Listas.
     */
    distinct?: Minha_ListaScalarFieldEnum | Minha_ListaScalarFieldEnum[]
  }

  /**
   * Minha_Lista findMany
   */
  export type Minha_ListaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Minha_Lista
     */
    select?: Minha_ListaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Minha_Lista
     */
    omit?: Minha_ListaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Minha_ListaInclude<ExtArgs> | null
    /**
     * Filter, which Minha_Listas to fetch.
     */
    where?: Minha_ListaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Minha_Listas to fetch.
     */
    orderBy?: Minha_ListaOrderByWithRelationInput | Minha_ListaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Minha_Listas.
     */
    cursor?: Minha_ListaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Minha_Listas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Minha_Listas.
     */
    skip?: number
    distinct?: Minha_ListaScalarFieldEnum | Minha_ListaScalarFieldEnum[]
  }

  /**
   * Minha_Lista create
   */
  export type Minha_ListaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Minha_Lista
     */
    select?: Minha_ListaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Minha_Lista
     */
    omit?: Minha_ListaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Minha_ListaInclude<ExtArgs> | null
    /**
     * The data needed to create a Minha_Lista.
     */
    data: XOR<Minha_ListaCreateInput, Minha_ListaUncheckedCreateInput>
  }

  /**
   * Minha_Lista createMany
   */
  export type Minha_ListaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Minha_Listas.
     */
    data: Minha_ListaCreateManyInput | Minha_ListaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Minha_Lista createManyAndReturn
   */
  export type Minha_ListaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Minha_Lista
     */
    select?: Minha_ListaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Minha_Lista
     */
    omit?: Minha_ListaOmit<ExtArgs> | null
    /**
     * The data used to create many Minha_Listas.
     */
    data: Minha_ListaCreateManyInput | Minha_ListaCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Minha_ListaIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Minha_Lista update
   */
  export type Minha_ListaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Minha_Lista
     */
    select?: Minha_ListaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Minha_Lista
     */
    omit?: Minha_ListaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Minha_ListaInclude<ExtArgs> | null
    /**
     * The data needed to update a Minha_Lista.
     */
    data: XOR<Minha_ListaUpdateInput, Minha_ListaUncheckedUpdateInput>
    /**
     * Choose, which Minha_Lista to update.
     */
    where: Minha_ListaWhereUniqueInput
  }

  /**
   * Minha_Lista updateMany
   */
  export type Minha_ListaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Minha_Listas.
     */
    data: XOR<Minha_ListaUpdateManyMutationInput, Minha_ListaUncheckedUpdateManyInput>
    /**
     * Filter which Minha_Listas to update
     */
    where?: Minha_ListaWhereInput
    /**
     * Limit how many Minha_Listas to update.
     */
    limit?: number
  }

  /**
   * Minha_Lista updateManyAndReturn
   */
  export type Minha_ListaUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Minha_Lista
     */
    select?: Minha_ListaSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Minha_Lista
     */
    omit?: Minha_ListaOmit<ExtArgs> | null
    /**
     * The data used to update Minha_Listas.
     */
    data: XOR<Minha_ListaUpdateManyMutationInput, Minha_ListaUncheckedUpdateManyInput>
    /**
     * Filter which Minha_Listas to update
     */
    where?: Minha_ListaWhereInput
    /**
     * Limit how many Minha_Listas to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Minha_ListaIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Minha_Lista upsert
   */
  export type Minha_ListaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Minha_Lista
     */
    select?: Minha_ListaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Minha_Lista
     */
    omit?: Minha_ListaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Minha_ListaInclude<ExtArgs> | null
    /**
     * The filter to search for the Minha_Lista to update in case it exists.
     */
    where: Minha_ListaWhereUniqueInput
    /**
     * In case the Minha_Lista found by the `where` argument doesn't exist, create a new Minha_Lista with this data.
     */
    create: XOR<Minha_ListaCreateInput, Minha_ListaUncheckedCreateInput>
    /**
     * In case the Minha_Lista was found with the provided `where` argument, update it with this data.
     */
    update: XOR<Minha_ListaUpdateInput, Minha_ListaUncheckedUpdateInput>
  }

  /**
   * Minha_Lista delete
   */
  export type Minha_ListaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Minha_Lista
     */
    select?: Minha_ListaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Minha_Lista
     */
    omit?: Minha_ListaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Minha_ListaInclude<ExtArgs> | null
    /**
     * Filter which Minha_Lista to delete.
     */
    where: Minha_ListaWhereUniqueInput
  }

  /**
   * Minha_Lista deleteMany
   */
  export type Minha_ListaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Minha_Listas to delete
     */
    where?: Minha_ListaWhereInput
    /**
     * Limit how many Minha_Listas to delete.
     */
    limit?: number
  }

  /**
   * Minha_Lista.vinhos
   */
  export type Minha_Lista$vinhosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vinhos
     */
    select?: VinhosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Vinhos
     */
    omit?: VinhosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VinhosInclude<ExtArgs> | null
    where?: VinhosWhereInput
    orderBy?: VinhosOrderByWithRelationInput | VinhosOrderByWithRelationInput[]
    cursor?: VinhosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: VinhosScalarFieldEnum | VinhosScalarFieldEnum[]
  }

  /**
   * Minha_Lista without action
   */
  export type Minha_ListaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Minha_Lista
     */
    select?: Minha_ListaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Minha_Lista
     */
    omit?: Minha_ListaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Minha_ListaInclude<ExtArgs> | null
  }


  /**
   * Model Vinhos
   */

  export type AggregateVinhos = {
    _count: VinhosCountAggregateOutputType | null
    _avg: VinhosAvgAggregateOutputType | null
    _sum: VinhosSumAggregateOutputType | null
    _min: VinhosMinAggregateOutputType | null
    _max: VinhosMaxAggregateOutputType | null
  }

  export type VinhosAvgAggregateOutputType = {
    id: number | null
  }

  export type VinhosSumAggregateOutputType = {
    id: number | null
  }

  export type VinhosMinAggregateOutputType = {
    id: number | null
    nome: string | null
    tipo: string | null
    uva: string | null
    pais: string | null
    regiao: string | null
    descricao: string | null
    IdLista: string | null
  }

  export type VinhosMaxAggregateOutputType = {
    id: number | null
    nome: string | null
    tipo: string | null
    uva: string | null
    pais: string | null
    regiao: string | null
    descricao: string | null
    IdLista: string | null
  }

  export type VinhosCountAggregateOutputType = {
    id: number
    nome: number
    tipo: number
    uva: number
    pais: number
    regiao: number
    descricao: number
    IdLista: number
    _all: number
  }


  export type VinhosAvgAggregateInputType = {
    id?: true
  }

  export type VinhosSumAggregateInputType = {
    id?: true
  }

  export type VinhosMinAggregateInputType = {
    id?: true
    nome?: true
    tipo?: true
    uva?: true
    pais?: true
    regiao?: true
    descricao?: true
    IdLista?: true
  }

  export type VinhosMaxAggregateInputType = {
    id?: true
    nome?: true
    tipo?: true
    uva?: true
    pais?: true
    regiao?: true
    descricao?: true
    IdLista?: true
  }

  export type VinhosCountAggregateInputType = {
    id?: true
    nome?: true
    tipo?: true
    uva?: true
    pais?: true
    regiao?: true
    descricao?: true
    IdLista?: true
    _all?: true
  }

  export type VinhosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Vinhos to aggregate.
     */
    where?: VinhosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Vinhos to fetch.
     */
    orderBy?: VinhosOrderByWithRelationInput | VinhosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: VinhosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Vinhos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Vinhos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Vinhos
    **/
    _count?: true | VinhosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: VinhosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: VinhosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: VinhosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: VinhosMaxAggregateInputType
  }

  export type GetVinhosAggregateType<T extends VinhosAggregateArgs> = {
        [P in keyof T & keyof AggregateVinhos]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateVinhos[P]>
      : GetScalarType<T[P], AggregateVinhos[P]>
  }




  export type VinhosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: VinhosWhereInput
    orderBy?: VinhosOrderByWithAggregationInput | VinhosOrderByWithAggregationInput[]
    by: VinhosScalarFieldEnum[] | VinhosScalarFieldEnum
    having?: VinhosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: VinhosCountAggregateInputType | true
    _avg?: VinhosAvgAggregateInputType
    _sum?: VinhosSumAggregateInputType
    _min?: VinhosMinAggregateInputType
    _max?: VinhosMaxAggregateInputType
  }

  export type VinhosGroupByOutputType = {
    id: number
    nome: string
    tipo: string
    uva: string
    pais: string
    regiao: string
    descricao: string
    IdLista: string
    _count: VinhosCountAggregateOutputType | null
    _avg: VinhosAvgAggregateOutputType | null
    _sum: VinhosSumAggregateOutputType | null
    _min: VinhosMinAggregateOutputType | null
    _max: VinhosMaxAggregateOutputType | null
  }

  type GetVinhosGroupByPayload<T extends VinhosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<VinhosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof VinhosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], VinhosGroupByOutputType[P]>
            : GetScalarType<T[P], VinhosGroupByOutputType[P]>
        }
      >
    >


  export type VinhosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    tipo?: boolean
    uva?: boolean
    pais?: boolean
    regiao?: boolean
    descricao?: boolean
    IdLista?: boolean
    lista?: boolean | Vinhos$listaArgs<ExtArgs>
  }, ExtArgs["result"]["vinhos"]>

  export type VinhosSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    tipo?: boolean
    uva?: boolean
    pais?: boolean
    regiao?: boolean
    descricao?: boolean
    IdLista?: boolean
    lista?: boolean | Vinhos$listaArgs<ExtArgs>
  }, ExtArgs["result"]["vinhos"]>

  export type VinhosSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    tipo?: boolean
    uva?: boolean
    pais?: boolean
    regiao?: boolean
    descricao?: boolean
    IdLista?: boolean
    lista?: boolean | Vinhos$listaArgs<ExtArgs>
  }, ExtArgs["result"]["vinhos"]>

  export type VinhosSelectScalar = {
    id?: boolean
    nome?: boolean
    tipo?: boolean
    uva?: boolean
    pais?: boolean
    regiao?: boolean
    descricao?: boolean
    IdLista?: boolean
  }

  export type VinhosOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nome" | "tipo" | "uva" | "pais" | "regiao" | "descricao" | "IdLista", ExtArgs["result"]["vinhos"]>
  export type VinhosInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    lista?: boolean | Vinhos$listaArgs<ExtArgs>
  }
  export type VinhosIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    lista?: boolean | Vinhos$listaArgs<ExtArgs>
  }
  export type VinhosIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    lista?: boolean | Vinhos$listaArgs<ExtArgs>
  }

  export type $VinhosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Vinhos"
    objects: {
      lista: Prisma.$Minha_ListaPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nome: string
      tipo: string
      uva: string
      pais: string
      regiao: string
      descricao: string
      IdLista: string
    }, ExtArgs["result"]["vinhos"]>
    composites: {}
  }

  type VinhosGetPayload<S extends boolean | null | undefined | VinhosDefaultArgs> = $Result.GetResult<Prisma.$VinhosPayload, S>

  type VinhosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<VinhosFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: VinhosCountAggregateInputType | true
    }

  export interface VinhosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Vinhos'], meta: { name: 'Vinhos' } }
    /**
     * Find zero or one Vinhos that matches the filter.
     * @param {VinhosFindUniqueArgs} args - Arguments to find a Vinhos
     * @example
     * // Get one Vinhos
     * const vinhos = await prisma.vinhos.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends VinhosFindUniqueArgs>(args: SelectSubset<T, VinhosFindUniqueArgs<ExtArgs>>): Prisma__VinhosClient<$Result.GetResult<Prisma.$VinhosPayload<ExtArgs>, T, "findUnique", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find one Vinhos that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {VinhosFindUniqueOrThrowArgs} args - Arguments to find a Vinhos
     * @example
     * // Get one Vinhos
     * const vinhos = await prisma.vinhos.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends VinhosFindUniqueOrThrowArgs>(args: SelectSubset<T, VinhosFindUniqueOrThrowArgs<ExtArgs>>): Prisma__VinhosClient<$Result.GetResult<Prisma.$VinhosPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find the first Vinhos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VinhosFindFirstArgs} args - Arguments to find a Vinhos
     * @example
     * // Get one Vinhos
     * const vinhos = await prisma.vinhos.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends VinhosFindFirstArgs>(args?: SelectSubset<T, VinhosFindFirstArgs<ExtArgs>>): Prisma__VinhosClient<$Result.GetResult<Prisma.$VinhosPayload<ExtArgs>, T, "findFirst", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find the first Vinhos that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VinhosFindFirstOrThrowArgs} args - Arguments to find a Vinhos
     * @example
     * // Get one Vinhos
     * const vinhos = await prisma.vinhos.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends VinhosFindFirstOrThrowArgs>(args?: SelectSubset<T, VinhosFindFirstOrThrowArgs<ExtArgs>>): Prisma__VinhosClient<$Result.GetResult<Prisma.$VinhosPayload<ExtArgs>, T, "findFirstOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find zero or more Vinhos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VinhosFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Vinhos
     * const vinhos = await prisma.vinhos.findMany()
     * 
     * // Get first 10 Vinhos
     * const vinhos = await prisma.vinhos.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const vinhosWithIdOnly = await prisma.vinhos.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends VinhosFindManyArgs>(args?: SelectSubset<T, VinhosFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VinhosPayload<ExtArgs>, T, "findMany", ClientOptions>>

    /**
     * Create a Vinhos.
     * @param {VinhosCreateArgs} args - Arguments to create a Vinhos.
     * @example
     * // Create one Vinhos
     * const Vinhos = await prisma.vinhos.create({
     *   data: {
     *     // ... data to create a Vinhos
     *   }
     * })
     * 
     */
    create<T extends VinhosCreateArgs>(args: SelectSubset<T, VinhosCreateArgs<ExtArgs>>): Prisma__VinhosClient<$Result.GetResult<Prisma.$VinhosPayload<ExtArgs>, T, "create", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Create many Vinhos.
     * @param {VinhosCreateManyArgs} args - Arguments to create many Vinhos.
     * @example
     * // Create many Vinhos
     * const vinhos = await prisma.vinhos.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends VinhosCreateManyArgs>(args?: SelectSubset<T, VinhosCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Vinhos and returns the data saved in the database.
     * @param {VinhosCreateManyAndReturnArgs} args - Arguments to create many Vinhos.
     * @example
     * // Create many Vinhos
     * const vinhos = await prisma.vinhos.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Vinhos and only return the `id`
     * const vinhosWithIdOnly = await prisma.vinhos.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends VinhosCreateManyAndReturnArgs>(args?: SelectSubset<T, VinhosCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VinhosPayload<ExtArgs>, T, "createManyAndReturn", ClientOptions>>

    /**
     * Delete a Vinhos.
     * @param {VinhosDeleteArgs} args - Arguments to delete one Vinhos.
     * @example
     * // Delete one Vinhos
     * const Vinhos = await prisma.vinhos.delete({
     *   where: {
     *     // ... filter to delete one Vinhos
     *   }
     * })
     * 
     */
    delete<T extends VinhosDeleteArgs>(args: SelectSubset<T, VinhosDeleteArgs<ExtArgs>>): Prisma__VinhosClient<$Result.GetResult<Prisma.$VinhosPayload<ExtArgs>, T, "delete", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Update one Vinhos.
     * @param {VinhosUpdateArgs} args - Arguments to update one Vinhos.
     * @example
     * // Update one Vinhos
     * const vinhos = await prisma.vinhos.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends VinhosUpdateArgs>(args: SelectSubset<T, VinhosUpdateArgs<ExtArgs>>): Prisma__VinhosClient<$Result.GetResult<Prisma.$VinhosPayload<ExtArgs>, T, "update", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Delete zero or more Vinhos.
     * @param {VinhosDeleteManyArgs} args - Arguments to filter Vinhos to delete.
     * @example
     * // Delete a few Vinhos
     * const { count } = await prisma.vinhos.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends VinhosDeleteManyArgs>(args?: SelectSubset<T, VinhosDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Vinhos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VinhosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Vinhos
     * const vinhos = await prisma.vinhos.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends VinhosUpdateManyArgs>(args: SelectSubset<T, VinhosUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Vinhos and returns the data updated in the database.
     * @param {VinhosUpdateManyAndReturnArgs} args - Arguments to update many Vinhos.
     * @example
     * // Update many Vinhos
     * const vinhos = await prisma.vinhos.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Vinhos and only return the `id`
     * const vinhosWithIdOnly = await prisma.vinhos.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends VinhosUpdateManyAndReturnArgs>(args: SelectSubset<T, VinhosUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VinhosPayload<ExtArgs>, T, "updateManyAndReturn", ClientOptions>>

    /**
     * Create or update one Vinhos.
     * @param {VinhosUpsertArgs} args - Arguments to update or create a Vinhos.
     * @example
     * // Update or create a Vinhos
     * const vinhos = await prisma.vinhos.upsert({
     *   create: {
     *     // ... data to create a Vinhos
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Vinhos we want to update
     *   }
     * })
     */
    upsert<T extends VinhosUpsertArgs>(args: SelectSubset<T, VinhosUpsertArgs<ExtArgs>>): Prisma__VinhosClient<$Result.GetResult<Prisma.$VinhosPayload<ExtArgs>, T, "upsert", ClientOptions>, never, ExtArgs, ClientOptions>


    /**
     * Count the number of Vinhos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VinhosCountArgs} args - Arguments to filter Vinhos to count.
     * @example
     * // Count the number of Vinhos
     * const count = await prisma.vinhos.count({
     *   where: {
     *     // ... the filter for the Vinhos we want to count
     *   }
     * })
    **/
    count<T extends VinhosCountArgs>(
      args?: Subset<T, VinhosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], VinhosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Vinhos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VinhosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends VinhosAggregateArgs>(args: Subset<T, VinhosAggregateArgs>): Prisma.PrismaPromise<GetVinhosAggregateType<T>>

    /**
     * Group by Vinhos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VinhosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends VinhosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: VinhosGroupByArgs['orderBy'] }
        : { orderBy?: VinhosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, VinhosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetVinhosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Vinhos model
   */
  readonly fields: VinhosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Vinhos.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__VinhosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    lista<T extends Vinhos$listaArgs<ExtArgs> = {}>(args?: Subset<T, Vinhos$listaArgs<ExtArgs>>): Prisma__Minha_ListaClient<$Result.GetResult<Prisma.$Minha_ListaPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | null, null, ExtArgs, ClientOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Vinhos model
   */ 
  interface VinhosFieldRefs {
    readonly id: FieldRef<"Vinhos", 'Int'>
    readonly nome: FieldRef<"Vinhos", 'String'>
    readonly tipo: FieldRef<"Vinhos", 'String'>
    readonly uva: FieldRef<"Vinhos", 'String'>
    readonly pais: FieldRef<"Vinhos", 'String'>
    readonly regiao: FieldRef<"Vinhos", 'String'>
    readonly descricao: FieldRef<"Vinhos", 'String'>
    readonly IdLista: FieldRef<"Vinhos", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Vinhos findUnique
   */
  export type VinhosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vinhos
     */
    select?: VinhosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Vinhos
     */
    omit?: VinhosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VinhosInclude<ExtArgs> | null
    /**
     * Filter, which Vinhos to fetch.
     */
    where: VinhosWhereUniqueInput
  }

  /**
   * Vinhos findUniqueOrThrow
   */
  export type VinhosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vinhos
     */
    select?: VinhosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Vinhos
     */
    omit?: VinhosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VinhosInclude<ExtArgs> | null
    /**
     * Filter, which Vinhos to fetch.
     */
    where: VinhosWhereUniqueInput
  }

  /**
   * Vinhos findFirst
   */
  export type VinhosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vinhos
     */
    select?: VinhosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Vinhos
     */
    omit?: VinhosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VinhosInclude<ExtArgs> | null
    /**
     * Filter, which Vinhos to fetch.
     */
    where?: VinhosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Vinhos to fetch.
     */
    orderBy?: VinhosOrderByWithRelationInput | VinhosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Vinhos.
     */
    cursor?: VinhosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Vinhos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Vinhos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Vinhos.
     */
    distinct?: VinhosScalarFieldEnum | VinhosScalarFieldEnum[]
  }

  /**
   * Vinhos findFirstOrThrow
   */
  export type VinhosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vinhos
     */
    select?: VinhosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Vinhos
     */
    omit?: VinhosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VinhosInclude<ExtArgs> | null
    /**
     * Filter, which Vinhos to fetch.
     */
    where?: VinhosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Vinhos to fetch.
     */
    orderBy?: VinhosOrderByWithRelationInput | VinhosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Vinhos.
     */
    cursor?: VinhosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Vinhos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Vinhos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Vinhos.
     */
    distinct?: VinhosScalarFieldEnum | VinhosScalarFieldEnum[]
  }

  /**
   * Vinhos findMany
   */
  export type VinhosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vinhos
     */
    select?: VinhosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Vinhos
     */
    omit?: VinhosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VinhosInclude<ExtArgs> | null
    /**
     * Filter, which Vinhos to fetch.
     */
    where?: VinhosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Vinhos to fetch.
     */
    orderBy?: VinhosOrderByWithRelationInput | VinhosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Vinhos.
     */
    cursor?: VinhosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Vinhos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Vinhos.
     */
    skip?: number
    distinct?: VinhosScalarFieldEnum | VinhosScalarFieldEnum[]
  }

  /**
   * Vinhos create
   */
  export type VinhosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vinhos
     */
    select?: VinhosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Vinhos
     */
    omit?: VinhosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VinhosInclude<ExtArgs> | null
    /**
     * The data needed to create a Vinhos.
     */
    data: XOR<VinhosCreateInput, VinhosUncheckedCreateInput>
  }

  /**
   * Vinhos createMany
   */
  export type VinhosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Vinhos.
     */
    data: VinhosCreateManyInput | VinhosCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Vinhos createManyAndReturn
   */
  export type VinhosCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vinhos
     */
    select?: VinhosSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Vinhos
     */
    omit?: VinhosOmit<ExtArgs> | null
    /**
     * The data used to create many Vinhos.
     */
    data: VinhosCreateManyInput | VinhosCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VinhosIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Vinhos update
   */
  export type VinhosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vinhos
     */
    select?: VinhosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Vinhos
     */
    omit?: VinhosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VinhosInclude<ExtArgs> | null
    /**
     * The data needed to update a Vinhos.
     */
    data: XOR<VinhosUpdateInput, VinhosUncheckedUpdateInput>
    /**
     * Choose, which Vinhos to update.
     */
    where: VinhosWhereUniqueInput
  }

  /**
   * Vinhos updateMany
   */
  export type VinhosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Vinhos.
     */
    data: XOR<VinhosUpdateManyMutationInput, VinhosUncheckedUpdateManyInput>
    /**
     * Filter which Vinhos to update
     */
    where?: VinhosWhereInput
    /**
     * Limit how many Vinhos to update.
     */
    limit?: number
  }

  /**
   * Vinhos updateManyAndReturn
   */
  export type VinhosUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vinhos
     */
    select?: VinhosSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Vinhos
     */
    omit?: VinhosOmit<ExtArgs> | null
    /**
     * The data used to update Vinhos.
     */
    data: XOR<VinhosUpdateManyMutationInput, VinhosUncheckedUpdateManyInput>
    /**
     * Filter which Vinhos to update
     */
    where?: VinhosWhereInput
    /**
     * Limit how many Vinhos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VinhosIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Vinhos upsert
   */
  export type VinhosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vinhos
     */
    select?: VinhosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Vinhos
     */
    omit?: VinhosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VinhosInclude<ExtArgs> | null
    /**
     * The filter to search for the Vinhos to update in case it exists.
     */
    where: VinhosWhereUniqueInput
    /**
     * In case the Vinhos found by the `where` argument doesn't exist, create a new Vinhos with this data.
     */
    create: XOR<VinhosCreateInput, VinhosUncheckedCreateInput>
    /**
     * In case the Vinhos was found with the provided `where` argument, update it with this data.
     */
    update: XOR<VinhosUpdateInput, VinhosUncheckedUpdateInput>
  }

  /**
   * Vinhos delete
   */
  export type VinhosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vinhos
     */
    select?: VinhosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Vinhos
     */
    omit?: VinhosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VinhosInclude<ExtArgs> | null
    /**
     * Filter which Vinhos to delete.
     */
    where: VinhosWhereUniqueInput
  }

  /**
   * Vinhos deleteMany
   */
  export type VinhosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Vinhos to delete
     */
    where?: VinhosWhereInput
    /**
     * Limit how many Vinhos to delete.
     */
    limit?: number
  }

  /**
   * Vinhos.lista
   */
  export type Vinhos$listaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Minha_Lista
     */
    select?: Minha_ListaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Minha_Lista
     */
    omit?: Minha_ListaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Minha_ListaInclude<ExtArgs> | null
    where?: Minha_ListaWhereInput
  }

  /**
   * Vinhos without action
   */
  export type VinhosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vinhos
     */
    select?: VinhosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Vinhos
     */
    omit?: VinhosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VinhosInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const AdminScalarFieldEnum: {
    id: 'id',
    pseudoNome: 'pseudoNome',
    senha: 'senha',
    create_at: 'create_at',
    update_at: 'update_at'
  };

  export type AdminScalarFieldEnum = (typeof AdminScalarFieldEnum)[keyof typeof AdminScalarFieldEnum]


  export const UsuarioScalarFieldEnum: {
    id: 'id',
    nome: 'nome',
    sobrenome: 'sobrenome',
    descricao: 'descricao',
    email: 'email',
    data_nascimento: 'data_nascimento',
    genero: 'genero',
    password: 'password',
    create_at: 'create_at',
    update_at: 'update_at'
  };

  export type UsuarioScalarFieldEnum = (typeof UsuarioScalarFieldEnum)[keyof typeof UsuarioScalarFieldEnum]


  export const Minha_ListaScalarFieldEnum: {
    id: 'id',
    nome: 'nome',
    tipo: 'tipo',
    uva: 'uva',
    pais: 'pais',
    regiao: 'regiao',
    descricao: 'descricao',
    nota: 'nota',
    favorito: 'favorito',
    IdUsuario: 'IdUsuario'
  };

  export type Minha_ListaScalarFieldEnum = (typeof Minha_ListaScalarFieldEnum)[keyof typeof Minha_ListaScalarFieldEnum]


  export const VinhosScalarFieldEnum: {
    id: 'id',
    nome: 'nome',
    tipo: 'tipo',
    uva: 'uva',
    pais: 'pais',
    regiao: 'regiao',
    descricao: 'descricao',
    IdLista: 'IdLista'
  };

  export type VinhosScalarFieldEnum = (typeof VinhosScalarFieldEnum)[keyof typeof VinhosScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Genero'
   */
  export type EnumGeneroFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Genero'>
    


  /**
   * Reference to a field of type 'Genero[]'
   */
  export type ListEnumGeneroFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Genero[]'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type AdminWhereInput = {
    AND?: AdminWhereInput | AdminWhereInput[]
    OR?: AdminWhereInput[]
    NOT?: AdminWhereInput | AdminWhereInput[]
    id?: StringFilter<"Admin"> | string
    pseudoNome?: StringFilter<"Admin"> | string
    senha?: StringFilter<"Admin"> | string
    create_at?: DateTimeNullableFilter<"Admin"> | Date | string | null
    update_at?: DateTimeNullableFilter<"Admin"> | Date | string | null
  }

  export type AdminOrderByWithRelationInput = {
    id?: SortOrder
    pseudoNome?: SortOrder
    senha?: SortOrder
    create_at?: SortOrderInput | SortOrder
    update_at?: SortOrderInput | SortOrder
  }

  export type AdminWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    pseudoNome?: string
    senha?: string
    AND?: AdminWhereInput | AdminWhereInput[]
    OR?: AdminWhereInput[]
    NOT?: AdminWhereInput | AdminWhereInput[]
    create_at?: DateTimeNullableFilter<"Admin"> | Date | string | null
    update_at?: DateTimeNullableFilter<"Admin"> | Date | string | null
  }, "id" | "pseudoNome" | "senha">

  export type AdminOrderByWithAggregationInput = {
    id?: SortOrder
    pseudoNome?: SortOrder
    senha?: SortOrder
    create_at?: SortOrderInput | SortOrder
    update_at?: SortOrderInput | SortOrder
    _count?: AdminCountOrderByAggregateInput
    _max?: AdminMaxOrderByAggregateInput
    _min?: AdminMinOrderByAggregateInput
  }

  export type AdminScalarWhereWithAggregatesInput = {
    AND?: AdminScalarWhereWithAggregatesInput | AdminScalarWhereWithAggregatesInput[]
    OR?: AdminScalarWhereWithAggregatesInput[]
    NOT?: AdminScalarWhereWithAggregatesInput | AdminScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Admin"> | string
    pseudoNome?: StringWithAggregatesFilter<"Admin"> | string
    senha?: StringWithAggregatesFilter<"Admin"> | string
    create_at?: DateTimeNullableWithAggregatesFilter<"Admin"> | Date | string | null
    update_at?: DateTimeNullableWithAggregatesFilter<"Admin"> | Date | string | null
  }

  export type UsuarioWhereInput = {
    AND?: UsuarioWhereInput | UsuarioWhereInput[]
    OR?: UsuarioWhereInput[]
    NOT?: UsuarioWhereInput | UsuarioWhereInput[]
    id?: StringFilter<"Usuario"> | string
    nome?: StringFilter<"Usuario"> | string
    sobrenome?: StringFilter<"Usuario"> | string
    descricao?: StringNullableFilter<"Usuario"> | string | null
    email?: StringFilter<"Usuario"> | string
    data_nascimento?: DateTimeFilter<"Usuario"> | Date | string
    genero?: EnumGeneroFilter<"Usuario"> | $Enums.Genero
    password?: StringFilter<"Usuario"> | string
    create_at?: DateTimeNullableFilter<"Usuario"> | Date | string | null
    update_at?: DateTimeNullableFilter<"Usuario"> | Date | string | null
    lista?: Minha_ListaListRelationFilter
  }

  export type UsuarioOrderByWithRelationInput = {
    id?: SortOrder
    nome?: SortOrder
    sobrenome?: SortOrder
    descricao?: SortOrderInput | SortOrder
    email?: SortOrder
    data_nascimento?: SortOrder
    genero?: SortOrder
    password?: SortOrder
    create_at?: SortOrderInput | SortOrder
    update_at?: SortOrderInput | SortOrder
    lista?: Minha_ListaOrderByRelationAggregateInput
  }

  export type UsuarioWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    email?: string
    AND?: UsuarioWhereInput | UsuarioWhereInput[]
    OR?: UsuarioWhereInput[]
    NOT?: UsuarioWhereInput | UsuarioWhereInput[]
    nome?: StringFilter<"Usuario"> | string
    sobrenome?: StringFilter<"Usuario"> | string
    descricao?: StringNullableFilter<"Usuario"> | string | null
    data_nascimento?: DateTimeFilter<"Usuario"> | Date | string
    genero?: EnumGeneroFilter<"Usuario"> | $Enums.Genero
    password?: StringFilter<"Usuario"> | string
    create_at?: DateTimeNullableFilter<"Usuario"> | Date | string | null
    update_at?: DateTimeNullableFilter<"Usuario"> | Date | string | null
    lista?: Minha_ListaListRelationFilter
  }, "id" | "email">

  export type UsuarioOrderByWithAggregationInput = {
    id?: SortOrder
    nome?: SortOrder
    sobrenome?: SortOrder
    descricao?: SortOrderInput | SortOrder
    email?: SortOrder
    data_nascimento?: SortOrder
    genero?: SortOrder
    password?: SortOrder
    create_at?: SortOrderInput | SortOrder
    update_at?: SortOrderInput | SortOrder
    _count?: UsuarioCountOrderByAggregateInput
    _max?: UsuarioMaxOrderByAggregateInput
    _min?: UsuarioMinOrderByAggregateInput
  }

  export type UsuarioScalarWhereWithAggregatesInput = {
    AND?: UsuarioScalarWhereWithAggregatesInput | UsuarioScalarWhereWithAggregatesInput[]
    OR?: UsuarioScalarWhereWithAggregatesInput[]
    NOT?: UsuarioScalarWhereWithAggregatesInput | UsuarioScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Usuario"> | string
    nome?: StringWithAggregatesFilter<"Usuario"> | string
    sobrenome?: StringWithAggregatesFilter<"Usuario"> | string
    descricao?: StringNullableWithAggregatesFilter<"Usuario"> | string | null
    email?: StringWithAggregatesFilter<"Usuario"> | string
    data_nascimento?: DateTimeWithAggregatesFilter<"Usuario"> | Date | string
    genero?: EnumGeneroWithAggregatesFilter<"Usuario"> | $Enums.Genero
    password?: StringWithAggregatesFilter<"Usuario"> | string
    create_at?: DateTimeNullableWithAggregatesFilter<"Usuario"> | Date | string | null
    update_at?: DateTimeNullableWithAggregatesFilter<"Usuario"> | Date | string | null
  }

  export type Minha_ListaWhereInput = {
    AND?: Minha_ListaWhereInput | Minha_ListaWhereInput[]
    OR?: Minha_ListaWhereInput[]
    NOT?: Minha_ListaWhereInput | Minha_ListaWhereInput[]
    id?: StringFilter<"Minha_Lista"> | string
    nome?: StringFilter<"Minha_Lista"> | string
    tipo?: StringFilter<"Minha_Lista"> | string
    uva?: StringFilter<"Minha_Lista"> | string
    pais?: StringFilter<"Minha_Lista"> | string
    regiao?: StringFilter<"Minha_Lista"> | string
    descricao?: StringNullableFilter<"Minha_Lista"> | string | null
    nota?: IntFilter<"Minha_Lista"> | number
    favorito?: BoolNullableFilter<"Minha_Lista"> | boolean | null
    IdUsuario?: StringFilter<"Minha_Lista"> | string
    usuario?: XOR<UsuarioScalarRelationFilter, UsuarioWhereInput>
    vinhos?: VinhosListRelationFilter
  }

  export type Minha_ListaOrderByWithRelationInput = {
    id?: SortOrder
    nome?: SortOrder
    tipo?: SortOrder
    uva?: SortOrder
    pais?: SortOrder
    regiao?: SortOrder
    descricao?: SortOrderInput | SortOrder
    nota?: SortOrder
    favorito?: SortOrderInput | SortOrder
    IdUsuario?: SortOrder
    usuario?: UsuarioOrderByWithRelationInput
    vinhos?: VinhosOrderByRelationAggregateInput
  }

  export type Minha_ListaWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: Minha_ListaWhereInput | Minha_ListaWhereInput[]
    OR?: Minha_ListaWhereInput[]
    NOT?: Minha_ListaWhereInput | Minha_ListaWhereInput[]
    nome?: StringFilter<"Minha_Lista"> | string
    tipo?: StringFilter<"Minha_Lista"> | string
    uva?: StringFilter<"Minha_Lista"> | string
    pais?: StringFilter<"Minha_Lista"> | string
    regiao?: StringFilter<"Minha_Lista"> | string
    descricao?: StringNullableFilter<"Minha_Lista"> | string | null
    nota?: IntFilter<"Minha_Lista"> | number
    favorito?: BoolNullableFilter<"Minha_Lista"> | boolean | null
    IdUsuario?: StringFilter<"Minha_Lista"> | string
    usuario?: XOR<UsuarioScalarRelationFilter, UsuarioWhereInput>
    vinhos?: VinhosListRelationFilter
  }, "id">

  export type Minha_ListaOrderByWithAggregationInput = {
    id?: SortOrder
    nome?: SortOrder
    tipo?: SortOrder
    uva?: SortOrder
    pais?: SortOrder
    regiao?: SortOrder
    descricao?: SortOrderInput | SortOrder
    nota?: SortOrder
    favorito?: SortOrderInput | SortOrder
    IdUsuario?: SortOrder
    _count?: Minha_ListaCountOrderByAggregateInput
    _avg?: Minha_ListaAvgOrderByAggregateInput
    _max?: Minha_ListaMaxOrderByAggregateInput
    _min?: Minha_ListaMinOrderByAggregateInput
    _sum?: Minha_ListaSumOrderByAggregateInput
  }

  export type Minha_ListaScalarWhereWithAggregatesInput = {
    AND?: Minha_ListaScalarWhereWithAggregatesInput | Minha_ListaScalarWhereWithAggregatesInput[]
    OR?: Minha_ListaScalarWhereWithAggregatesInput[]
    NOT?: Minha_ListaScalarWhereWithAggregatesInput | Minha_ListaScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Minha_Lista"> | string
    nome?: StringWithAggregatesFilter<"Minha_Lista"> | string
    tipo?: StringWithAggregatesFilter<"Minha_Lista"> | string
    uva?: StringWithAggregatesFilter<"Minha_Lista"> | string
    pais?: StringWithAggregatesFilter<"Minha_Lista"> | string
    regiao?: StringWithAggregatesFilter<"Minha_Lista"> | string
    descricao?: StringNullableWithAggregatesFilter<"Minha_Lista"> | string | null
    nota?: IntWithAggregatesFilter<"Minha_Lista"> | number
    favorito?: BoolNullableWithAggregatesFilter<"Minha_Lista"> | boolean | null
    IdUsuario?: StringWithAggregatesFilter<"Minha_Lista"> | string
  }

  export type VinhosWhereInput = {
    AND?: VinhosWhereInput | VinhosWhereInput[]
    OR?: VinhosWhereInput[]
    NOT?: VinhosWhereInput | VinhosWhereInput[]
    id?: IntFilter<"Vinhos"> | number
    nome?: StringFilter<"Vinhos"> | string
    tipo?: StringFilter<"Vinhos"> | string
    uva?: StringFilter<"Vinhos"> | string
    pais?: StringFilter<"Vinhos"> | string
    regiao?: StringFilter<"Vinhos"> | string
    descricao?: StringFilter<"Vinhos"> | string
    IdLista?: StringFilter<"Vinhos"> | string
    lista?: XOR<Minha_ListaNullableScalarRelationFilter, Minha_ListaWhereInput> | null
  }

  export type VinhosOrderByWithRelationInput = {
    id?: SortOrder
    nome?: SortOrder
    tipo?: SortOrder
    uva?: SortOrder
    pais?: SortOrder
    regiao?: SortOrder
    descricao?: SortOrder
    IdLista?: SortOrder
    lista?: Minha_ListaOrderByWithRelationInput
  }

  export type VinhosWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: VinhosWhereInput | VinhosWhereInput[]
    OR?: VinhosWhereInput[]
    NOT?: VinhosWhereInput | VinhosWhereInput[]
    nome?: StringFilter<"Vinhos"> | string
    tipo?: StringFilter<"Vinhos"> | string
    uva?: StringFilter<"Vinhos"> | string
    pais?: StringFilter<"Vinhos"> | string
    regiao?: StringFilter<"Vinhos"> | string
    descricao?: StringFilter<"Vinhos"> | string
    IdLista?: StringFilter<"Vinhos"> | string
    lista?: XOR<Minha_ListaNullableScalarRelationFilter, Minha_ListaWhereInput> | null
  }, "id">

  export type VinhosOrderByWithAggregationInput = {
    id?: SortOrder
    nome?: SortOrder
    tipo?: SortOrder
    uva?: SortOrder
    pais?: SortOrder
    regiao?: SortOrder
    descricao?: SortOrder
    IdLista?: SortOrder
    _count?: VinhosCountOrderByAggregateInput
    _avg?: VinhosAvgOrderByAggregateInput
    _max?: VinhosMaxOrderByAggregateInput
    _min?: VinhosMinOrderByAggregateInput
    _sum?: VinhosSumOrderByAggregateInput
  }

  export type VinhosScalarWhereWithAggregatesInput = {
    AND?: VinhosScalarWhereWithAggregatesInput | VinhosScalarWhereWithAggregatesInput[]
    OR?: VinhosScalarWhereWithAggregatesInput[]
    NOT?: VinhosScalarWhereWithAggregatesInput | VinhosScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Vinhos"> | number
    nome?: StringWithAggregatesFilter<"Vinhos"> | string
    tipo?: StringWithAggregatesFilter<"Vinhos"> | string
    uva?: StringWithAggregatesFilter<"Vinhos"> | string
    pais?: StringWithAggregatesFilter<"Vinhos"> | string
    regiao?: StringWithAggregatesFilter<"Vinhos"> | string
    descricao?: StringWithAggregatesFilter<"Vinhos"> | string
    IdLista?: StringWithAggregatesFilter<"Vinhos"> | string
  }

  export type AdminCreateInput = {
    id?: string
    pseudoNome: string
    senha: string
    create_at?: Date | string | null
    update_at?: Date | string | null
  }

  export type AdminUncheckedCreateInput = {
    id?: string
    pseudoNome: string
    senha: string
    create_at?: Date | string | null
    update_at?: Date | string | null
  }

  export type AdminUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    pseudoNome?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    create_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type AdminUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    pseudoNome?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    create_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type AdminCreateManyInput = {
    id?: string
    pseudoNome: string
    senha: string
    create_at?: Date | string | null
    update_at?: Date | string | null
  }

  export type AdminUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    pseudoNome?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    create_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type AdminUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    pseudoNome?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    create_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type UsuarioCreateInput = {
    id?: string
    nome: string
    sobrenome: string
    descricao?: string | null
    email: string
    data_nascimento: Date | string
    genero?: $Enums.Genero
    password: string
    create_at?: Date | string | null
    update_at?: Date | string | null
    lista?: Minha_ListaCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioUncheckedCreateInput = {
    id?: string
    nome: string
    sobrenome: string
    descricao?: string | null
    email: string
    data_nascimento: Date | string
    genero?: $Enums.Genero
    password: string
    create_at?: Date | string | null
    update_at?: Date | string | null
    lista?: Minha_ListaUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    sobrenome?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    data_nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    genero?: EnumGeneroFieldUpdateOperationsInput | $Enums.Genero
    password?: StringFieldUpdateOperationsInput | string
    create_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lista?: Minha_ListaUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    sobrenome?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    data_nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    genero?: EnumGeneroFieldUpdateOperationsInput | $Enums.Genero
    password?: StringFieldUpdateOperationsInput | string
    create_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lista?: Minha_ListaUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioCreateManyInput = {
    id?: string
    nome: string
    sobrenome: string
    descricao?: string | null
    email: string
    data_nascimento: Date | string
    genero?: $Enums.Genero
    password: string
    create_at?: Date | string | null
    update_at?: Date | string | null
  }

  export type UsuarioUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    sobrenome?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    data_nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    genero?: EnumGeneroFieldUpdateOperationsInput | $Enums.Genero
    password?: StringFieldUpdateOperationsInput | string
    create_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type UsuarioUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    sobrenome?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    data_nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    genero?: EnumGeneroFieldUpdateOperationsInput | $Enums.Genero
    password?: StringFieldUpdateOperationsInput | string
    create_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type Minha_ListaCreateInput = {
    id?: string
    nome: string
    tipo: string
    uva: string
    pais: string
    regiao: string
    descricao?: string | null
    nota: number
    favorito?: boolean | null
    usuario: UsuarioCreateNestedOneWithoutListaInput
    vinhos?: VinhosCreateNestedManyWithoutListaInput
  }

  export type Minha_ListaUncheckedCreateInput = {
    id?: string
    nome: string
    tipo: string
    uva: string
    pais: string
    regiao: string
    descricao?: string | null
    nota: number
    favorito?: boolean | null
    IdUsuario: string
    vinhos?: VinhosUncheckedCreateNestedManyWithoutListaInput
  }

  export type Minha_ListaUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    tipo?: StringFieldUpdateOperationsInput | string
    uva?: StringFieldUpdateOperationsInput | string
    pais?: StringFieldUpdateOperationsInput | string
    regiao?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    nota?: IntFieldUpdateOperationsInput | number
    favorito?: NullableBoolFieldUpdateOperationsInput | boolean | null
    usuario?: UsuarioUpdateOneRequiredWithoutListaNestedInput
    vinhos?: VinhosUpdateManyWithoutListaNestedInput
  }

  export type Minha_ListaUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    tipo?: StringFieldUpdateOperationsInput | string
    uva?: StringFieldUpdateOperationsInput | string
    pais?: StringFieldUpdateOperationsInput | string
    regiao?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    nota?: IntFieldUpdateOperationsInput | number
    favorito?: NullableBoolFieldUpdateOperationsInput | boolean | null
    IdUsuario?: StringFieldUpdateOperationsInput | string
    vinhos?: VinhosUncheckedUpdateManyWithoutListaNestedInput
  }

  export type Minha_ListaCreateManyInput = {
    id?: string
    nome: string
    tipo: string
    uva: string
    pais: string
    regiao: string
    descricao?: string | null
    nota: number
    favorito?: boolean | null
    IdUsuario: string
  }

  export type Minha_ListaUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    tipo?: StringFieldUpdateOperationsInput | string
    uva?: StringFieldUpdateOperationsInput | string
    pais?: StringFieldUpdateOperationsInput | string
    regiao?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    nota?: IntFieldUpdateOperationsInput | number
    favorito?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Minha_ListaUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    tipo?: StringFieldUpdateOperationsInput | string
    uva?: StringFieldUpdateOperationsInput | string
    pais?: StringFieldUpdateOperationsInput | string
    regiao?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    nota?: IntFieldUpdateOperationsInput | number
    favorito?: NullableBoolFieldUpdateOperationsInput | boolean | null
    IdUsuario?: StringFieldUpdateOperationsInput | string
  }

  export type VinhosCreateInput = {
    nome: string
    tipo: string
    uva: string
    pais: string
    regiao: string
    descricao: string
    lista?: Minha_ListaCreateNestedOneWithoutVinhosInput
  }

  export type VinhosUncheckedCreateInput = {
    id?: number
    nome: string
    tipo: string
    uva: string
    pais: string
    regiao: string
    descricao: string
    IdLista: string
  }

  export type VinhosUpdateInput = {
    nome?: StringFieldUpdateOperationsInput | string
    tipo?: StringFieldUpdateOperationsInput | string
    uva?: StringFieldUpdateOperationsInput | string
    pais?: StringFieldUpdateOperationsInput | string
    regiao?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    lista?: Minha_ListaUpdateOneWithoutVinhosNestedInput
  }

  export type VinhosUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    tipo?: StringFieldUpdateOperationsInput | string
    uva?: StringFieldUpdateOperationsInput | string
    pais?: StringFieldUpdateOperationsInput | string
    regiao?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    IdLista?: StringFieldUpdateOperationsInput | string
  }

  export type VinhosCreateManyInput = {
    id?: number
    nome: string
    tipo: string
    uva: string
    pais: string
    regiao: string
    descricao: string
    IdLista: string
  }

  export type VinhosUpdateManyMutationInput = {
    nome?: StringFieldUpdateOperationsInput | string
    tipo?: StringFieldUpdateOperationsInput | string
    uva?: StringFieldUpdateOperationsInput | string
    pais?: StringFieldUpdateOperationsInput | string
    regiao?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
  }

  export type VinhosUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    tipo?: StringFieldUpdateOperationsInput | string
    uva?: StringFieldUpdateOperationsInput | string
    pais?: StringFieldUpdateOperationsInput | string
    regiao?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    IdLista?: StringFieldUpdateOperationsInput | string
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type AdminCountOrderByAggregateInput = {
    id?: SortOrder
    pseudoNome?: SortOrder
    senha?: SortOrder
    create_at?: SortOrder
    update_at?: SortOrder
  }

  export type AdminMaxOrderByAggregateInput = {
    id?: SortOrder
    pseudoNome?: SortOrder
    senha?: SortOrder
    create_at?: SortOrder
    update_at?: SortOrder
  }

  export type AdminMinOrderByAggregateInput = {
    id?: SortOrder
    pseudoNome?: SortOrder
    senha?: SortOrder
    create_at?: SortOrder
    update_at?: SortOrder
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type EnumGeneroFilter<$PrismaModel = never> = {
    equals?: $Enums.Genero | EnumGeneroFieldRefInput<$PrismaModel>
    in?: $Enums.Genero[] | ListEnumGeneroFieldRefInput<$PrismaModel>
    notIn?: $Enums.Genero[] | ListEnumGeneroFieldRefInput<$PrismaModel>
    not?: NestedEnumGeneroFilter<$PrismaModel> | $Enums.Genero
  }

  export type Minha_ListaListRelationFilter = {
    every?: Minha_ListaWhereInput
    some?: Minha_ListaWhereInput
    none?: Minha_ListaWhereInput
  }

  export type Minha_ListaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UsuarioCountOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    sobrenome?: SortOrder
    descricao?: SortOrder
    email?: SortOrder
    data_nascimento?: SortOrder
    genero?: SortOrder
    password?: SortOrder
    create_at?: SortOrder
    update_at?: SortOrder
  }

  export type UsuarioMaxOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    sobrenome?: SortOrder
    descricao?: SortOrder
    email?: SortOrder
    data_nascimento?: SortOrder
    genero?: SortOrder
    password?: SortOrder
    create_at?: SortOrder
    update_at?: SortOrder
  }

  export type UsuarioMinOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    sobrenome?: SortOrder
    descricao?: SortOrder
    email?: SortOrder
    data_nascimento?: SortOrder
    genero?: SortOrder
    password?: SortOrder
    create_at?: SortOrder
    update_at?: SortOrder
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type EnumGeneroWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Genero | EnumGeneroFieldRefInput<$PrismaModel>
    in?: $Enums.Genero[] | ListEnumGeneroFieldRefInput<$PrismaModel>
    notIn?: $Enums.Genero[] | ListEnumGeneroFieldRefInput<$PrismaModel>
    not?: NestedEnumGeneroWithAggregatesFilter<$PrismaModel> | $Enums.Genero
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumGeneroFilter<$PrismaModel>
    _max?: NestedEnumGeneroFilter<$PrismaModel>
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type BoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type UsuarioScalarRelationFilter = {
    is?: UsuarioWhereInput
    isNot?: UsuarioWhereInput
  }

  export type VinhosListRelationFilter = {
    every?: VinhosWhereInput
    some?: VinhosWhereInput
    none?: VinhosWhereInput
  }

  export type VinhosOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type Minha_ListaCountOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    tipo?: SortOrder
    uva?: SortOrder
    pais?: SortOrder
    regiao?: SortOrder
    descricao?: SortOrder
    nota?: SortOrder
    favorito?: SortOrder
    IdUsuario?: SortOrder
  }

  export type Minha_ListaAvgOrderByAggregateInput = {
    nota?: SortOrder
  }

  export type Minha_ListaMaxOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    tipo?: SortOrder
    uva?: SortOrder
    pais?: SortOrder
    regiao?: SortOrder
    descricao?: SortOrder
    nota?: SortOrder
    favorito?: SortOrder
    IdUsuario?: SortOrder
  }

  export type Minha_ListaMinOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    tipo?: SortOrder
    uva?: SortOrder
    pais?: SortOrder
    regiao?: SortOrder
    descricao?: SortOrder
    nota?: SortOrder
    favorito?: SortOrder
    IdUsuario?: SortOrder
  }

  export type Minha_ListaSumOrderByAggregateInput = {
    nota?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type BoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type Minha_ListaNullableScalarRelationFilter = {
    is?: Minha_ListaWhereInput | null
    isNot?: Minha_ListaWhereInput | null
  }

  export type VinhosCountOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    tipo?: SortOrder
    uva?: SortOrder
    pais?: SortOrder
    regiao?: SortOrder
    descricao?: SortOrder
    IdLista?: SortOrder
  }

  export type VinhosAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type VinhosMaxOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    tipo?: SortOrder
    uva?: SortOrder
    pais?: SortOrder
    regiao?: SortOrder
    descricao?: SortOrder
    IdLista?: SortOrder
  }

  export type VinhosMinOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    tipo?: SortOrder
    uva?: SortOrder
    pais?: SortOrder
    regiao?: SortOrder
    descricao?: SortOrder
    IdLista?: SortOrder
  }

  export type VinhosSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type Minha_ListaCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<Minha_ListaCreateWithoutUsuarioInput, Minha_ListaUncheckedCreateWithoutUsuarioInput> | Minha_ListaCreateWithoutUsuarioInput[] | Minha_ListaUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: Minha_ListaCreateOrConnectWithoutUsuarioInput | Minha_ListaCreateOrConnectWithoutUsuarioInput[]
    createMany?: Minha_ListaCreateManyUsuarioInputEnvelope
    connect?: Minha_ListaWhereUniqueInput | Minha_ListaWhereUniqueInput[]
  }

  export type Minha_ListaUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<Minha_ListaCreateWithoutUsuarioInput, Minha_ListaUncheckedCreateWithoutUsuarioInput> | Minha_ListaCreateWithoutUsuarioInput[] | Minha_ListaUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: Minha_ListaCreateOrConnectWithoutUsuarioInput | Minha_ListaCreateOrConnectWithoutUsuarioInput[]
    createMany?: Minha_ListaCreateManyUsuarioInputEnvelope
    connect?: Minha_ListaWhereUniqueInput | Minha_ListaWhereUniqueInput[]
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type EnumGeneroFieldUpdateOperationsInput = {
    set?: $Enums.Genero
  }

  export type Minha_ListaUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<Minha_ListaCreateWithoutUsuarioInput, Minha_ListaUncheckedCreateWithoutUsuarioInput> | Minha_ListaCreateWithoutUsuarioInput[] | Minha_ListaUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: Minha_ListaCreateOrConnectWithoutUsuarioInput | Minha_ListaCreateOrConnectWithoutUsuarioInput[]
    upsert?: Minha_ListaUpsertWithWhereUniqueWithoutUsuarioInput | Minha_ListaUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: Minha_ListaCreateManyUsuarioInputEnvelope
    set?: Minha_ListaWhereUniqueInput | Minha_ListaWhereUniqueInput[]
    disconnect?: Minha_ListaWhereUniqueInput | Minha_ListaWhereUniqueInput[]
    delete?: Minha_ListaWhereUniqueInput | Minha_ListaWhereUniqueInput[]
    connect?: Minha_ListaWhereUniqueInput | Minha_ListaWhereUniqueInput[]
    update?: Minha_ListaUpdateWithWhereUniqueWithoutUsuarioInput | Minha_ListaUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: Minha_ListaUpdateManyWithWhereWithoutUsuarioInput | Minha_ListaUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: Minha_ListaScalarWhereInput | Minha_ListaScalarWhereInput[]
  }

  export type Minha_ListaUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<Minha_ListaCreateWithoutUsuarioInput, Minha_ListaUncheckedCreateWithoutUsuarioInput> | Minha_ListaCreateWithoutUsuarioInput[] | Minha_ListaUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: Minha_ListaCreateOrConnectWithoutUsuarioInput | Minha_ListaCreateOrConnectWithoutUsuarioInput[]
    upsert?: Minha_ListaUpsertWithWhereUniqueWithoutUsuarioInput | Minha_ListaUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: Minha_ListaCreateManyUsuarioInputEnvelope
    set?: Minha_ListaWhereUniqueInput | Minha_ListaWhereUniqueInput[]
    disconnect?: Minha_ListaWhereUniqueInput | Minha_ListaWhereUniqueInput[]
    delete?: Minha_ListaWhereUniqueInput | Minha_ListaWhereUniqueInput[]
    connect?: Minha_ListaWhereUniqueInput | Minha_ListaWhereUniqueInput[]
    update?: Minha_ListaUpdateWithWhereUniqueWithoutUsuarioInput | Minha_ListaUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: Minha_ListaUpdateManyWithWhereWithoutUsuarioInput | Minha_ListaUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: Minha_ListaScalarWhereInput | Minha_ListaScalarWhereInput[]
  }

  export type UsuarioCreateNestedOneWithoutListaInput = {
    create?: XOR<UsuarioCreateWithoutListaInput, UsuarioUncheckedCreateWithoutListaInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutListaInput
    connect?: UsuarioWhereUniqueInput
  }

  export type VinhosCreateNestedManyWithoutListaInput = {
    create?: XOR<VinhosCreateWithoutListaInput, VinhosUncheckedCreateWithoutListaInput> | VinhosCreateWithoutListaInput[] | VinhosUncheckedCreateWithoutListaInput[]
    connectOrCreate?: VinhosCreateOrConnectWithoutListaInput | VinhosCreateOrConnectWithoutListaInput[]
    createMany?: VinhosCreateManyListaInputEnvelope
    connect?: VinhosWhereUniqueInput | VinhosWhereUniqueInput[]
  }

  export type VinhosUncheckedCreateNestedManyWithoutListaInput = {
    create?: XOR<VinhosCreateWithoutListaInput, VinhosUncheckedCreateWithoutListaInput> | VinhosCreateWithoutListaInput[] | VinhosUncheckedCreateWithoutListaInput[]
    connectOrCreate?: VinhosCreateOrConnectWithoutListaInput | VinhosCreateOrConnectWithoutListaInput[]
    createMany?: VinhosCreateManyListaInputEnvelope
    connect?: VinhosWhereUniqueInput | VinhosWhereUniqueInput[]
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableBoolFieldUpdateOperationsInput = {
    set?: boolean | null
  }

  export type UsuarioUpdateOneRequiredWithoutListaNestedInput = {
    create?: XOR<UsuarioCreateWithoutListaInput, UsuarioUncheckedCreateWithoutListaInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutListaInput
    upsert?: UsuarioUpsertWithoutListaInput
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutListaInput, UsuarioUpdateWithoutListaInput>, UsuarioUncheckedUpdateWithoutListaInput>
  }

  export type VinhosUpdateManyWithoutListaNestedInput = {
    create?: XOR<VinhosCreateWithoutListaInput, VinhosUncheckedCreateWithoutListaInput> | VinhosCreateWithoutListaInput[] | VinhosUncheckedCreateWithoutListaInput[]
    connectOrCreate?: VinhosCreateOrConnectWithoutListaInput | VinhosCreateOrConnectWithoutListaInput[]
    upsert?: VinhosUpsertWithWhereUniqueWithoutListaInput | VinhosUpsertWithWhereUniqueWithoutListaInput[]
    createMany?: VinhosCreateManyListaInputEnvelope
    set?: VinhosWhereUniqueInput | VinhosWhereUniqueInput[]
    disconnect?: VinhosWhereUniqueInput | VinhosWhereUniqueInput[]
    delete?: VinhosWhereUniqueInput | VinhosWhereUniqueInput[]
    connect?: VinhosWhereUniqueInput | VinhosWhereUniqueInput[]
    update?: VinhosUpdateWithWhereUniqueWithoutListaInput | VinhosUpdateWithWhereUniqueWithoutListaInput[]
    updateMany?: VinhosUpdateManyWithWhereWithoutListaInput | VinhosUpdateManyWithWhereWithoutListaInput[]
    deleteMany?: VinhosScalarWhereInput | VinhosScalarWhereInput[]
  }

  export type VinhosUncheckedUpdateManyWithoutListaNestedInput = {
    create?: XOR<VinhosCreateWithoutListaInput, VinhosUncheckedCreateWithoutListaInput> | VinhosCreateWithoutListaInput[] | VinhosUncheckedCreateWithoutListaInput[]
    connectOrCreate?: VinhosCreateOrConnectWithoutListaInput | VinhosCreateOrConnectWithoutListaInput[]
    upsert?: VinhosUpsertWithWhereUniqueWithoutListaInput | VinhosUpsertWithWhereUniqueWithoutListaInput[]
    createMany?: VinhosCreateManyListaInputEnvelope
    set?: VinhosWhereUniqueInput | VinhosWhereUniqueInput[]
    disconnect?: VinhosWhereUniqueInput | VinhosWhereUniqueInput[]
    delete?: VinhosWhereUniqueInput | VinhosWhereUniqueInput[]
    connect?: VinhosWhereUniqueInput | VinhosWhereUniqueInput[]
    update?: VinhosUpdateWithWhereUniqueWithoutListaInput | VinhosUpdateWithWhereUniqueWithoutListaInput[]
    updateMany?: VinhosUpdateManyWithWhereWithoutListaInput | VinhosUpdateManyWithWhereWithoutListaInput[]
    deleteMany?: VinhosScalarWhereInput | VinhosScalarWhereInput[]
  }

  export type Minha_ListaCreateNestedOneWithoutVinhosInput = {
    create?: XOR<Minha_ListaCreateWithoutVinhosInput, Minha_ListaUncheckedCreateWithoutVinhosInput>
    connectOrCreate?: Minha_ListaCreateOrConnectWithoutVinhosInput
    connect?: Minha_ListaWhereUniqueInput
  }

  export type Minha_ListaUpdateOneWithoutVinhosNestedInput = {
    create?: XOR<Minha_ListaCreateWithoutVinhosInput, Minha_ListaUncheckedCreateWithoutVinhosInput>
    connectOrCreate?: Minha_ListaCreateOrConnectWithoutVinhosInput
    upsert?: Minha_ListaUpsertWithoutVinhosInput
    disconnect?: Minha_ListaWhereInput | boolean
    delete?: Minha_ListaWhereInput | boolean
    connect?: Minha_ListaWhereUniqueInput
    update?: XOR<XOR<Minha_ListaUpdateToOneWithWhereWithoutVinhosInput, Minha_ListaUpdateWithoutVinhosInput>, Minha_ListaUncheckedUpdateWithoutVinhosInput>
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedEnumGeneroFilter<$PrismaModel = never> = {
    equals?: $Enums.Genero | EnumGeneroFieldRefInput<$PrismaModel>
    in?: $Enums.Genero[] | ListEnumGeneroFieldRefInput<$PrismaModel>
    notIn?: $Enums.Genero[] | ListEnumGeneroFieldRefInput<$PrismaModel>
    not?: NestedEnumGeneroFilter<$PrismaModel> | $Enums.Genero
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedEnumGeneroWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Genero | EnumGeneroFieldRefInput<$PrismaModel>
    in?: $Enums.Genero[] | ListEnumGeneroFieldRefInput<$PrismaModel>
    notIn?: $Enums.Genero[] | ListEnumGeneroFieldRefInput<$PrismaModel>
    not?: NestedEnumGeneroWithAggregatesFilter<$PrismaModel> | $Enums.Genero
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumGeneroFilter<$PrismaModel>
    _max?: NestedEnumGeneroFilter<$PrismaModel>
  }

  export type NestedBoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedBoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type Minha_ListaCreateWithoutUsuarioInput = {
    id?: string
    nome: string
    tipo: string
    uva: string
    pais: string
    regiao: string
    descricao?: string | null
    nota: number
    favorito?: boolean | null
    vinhos?: VinhosCreateNestedManyWithoutListaInput
  }

  export type Minha_ListaUncheckedCreateWithoutUsuarioInput = {
    id?: string
    nome: string
    tipo: string
    uva: string
    pais: string
    regiao: string
    descricao?: string | null
    nota: number
    favorito?: boolean | null
    vinhos?: VinhosUncheckedCreateNestedManyWithoutListaInput
  }

  export type Minha_ListaCreateOrConnectWithoutUsuarioInput = {
    where: Minha_ListaWhereUniqueInput
    create: XOR<Minha_ListaCreateWithoutUsuarioInput, Minha_ListaUncheckedCreateWithoutUsuarioInput>
  }

  export type Minha_ListaCreateManyUsuarioInputEnvelope = {
    data: Minha_ListaCreateManyUsuarioInput | Minha_ListaCreateManyUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type Minha_ListaUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: Minha_ListaWhereUniqueInput
    update: XOR<Minha_ListaUpdateWithoutUsuarioInput, Minha_ListaUncheckedUpdateWithoutUsuarioInput>
    create: XOR<Minha_ListaCreateWithoutUsuarioInput, Minha_ListaUncheckedCreateWithoutUsuarioInput>
  }

  export type Minha_ListaUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: Minha_ListaWhereUniqueInput
    data: XOR<Minha_ListaUpdateWithoutUsuarioInput, Minha_ListaUncheckedUpdateWithoutUsuarioInput>
  }

  export type Minha_ListaUpdateManyWithWhereWithoutUsuarioInput = {
    where: Minha_ListaScalarWhereInput
    data: XOR<Minha_ListaUpdateManyMutationInput, Minha_ListaUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type Minha_ListaScalarWhereInput = {
    AND?: Minha_ListaScalarWhereInput | Minha_ListaScalarWhereInput[]
    OR?: Minha_ListaScalarWhereInput[]
    NOT?: Minha_ListaScalarWhereInput | Minha_ListaScalarWhereInput[]
    id?: StringFilter<"Minha_Lista"> | string
    nome?: StringFilter<"Minha_Lista"> | string
    tipo?: StringFilter<"Minha_Lista"> | string
    uva?: StringFilter<"Minha_Lista"> | string
    pais?: StringFilter<"Minha_Lista"> | string
    regiao?: StringFilter<"Minha_Lista"> | string
    descricao?: StringNullableFilter<"Minha_Lista"> | string | null
    nota?: IntFilter<"Minha_Lista"> | number
    favorito?: BoolNullableFilter<"Minha_Lista"> | boolean | null
    IdUsuario?: StringFilter<"Minha_Lista"> | string
  }

  export type UsuarioCreateWithoutListaInput = {
    id?: string
    nome: string
    sobrenome: string
    descricao?: string | null
    email: string
    data_nascimento: Date | string
    genero?: $Enums.Genero
    password: string
    create_at?: Date | string | null
    update_at?: Date | string | null
  }

  export type UsuarioUncheckedCreateWithoutListaInput = {
    id?: string
    nome: string
    sobrenome: string
    descricao?: string | null
    email: string
    data_nascimento: Date | string
    genero?: $Enums.Genero
    password: string
    create_at?: Date | string | null
    update_at?: Date | string | null
  }

  export type UsuarioCreateOrConnectWithoutListaInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutListaInput, UsuarioUncheckedCreateWithoutListaInput>
  }

  export type VinhosCreateWithoutListaInput = {
    nome: string
    tipo: string
    uva: string
    pais: string
    regiao: string
    descricao: string
  }

  export type VinhosUncheckedCreateWithoutListaInput = {
    id?: number
    nome: string
    tipo: string
    uva: string
    pais: string
    regiao: string
    descricao: string
  }

  export type VinhosCreateOrConnectWithoutListaInput = {
    where: VinhosWhereUniqueInput
    create: XOR<VinhosCreateWithoutListaInput, VinhosUncheckedCreateWithoutListaInput>
  }

  export type VinhosCreateManyListaInputEnvelope = {
    data: VinhosCreateManyListaInput | VinhosCreateManyListaInput[]
    skipDuplicates?: boolean
  }

  export type UsuarioUpsertWithoutListaInput = {
    update: XOR<UsuarioUpdateWithoutListaInput, UsuarioUncheckedUpdateWithoutListaInput>
    create: XOR<UsuarioCreateWithoutListaInput, UsuarioUncheckedCreateWithoutListaInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutListaInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutListaInput, UsuarioUncheckedUpdateWithoutListaInput>
  }

  export type UsuarioUpdateWithoutListaInput = {
    id?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    sobrenome?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    data_nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    genero?: EnumGeneroFieldUpdateOperationsInput | $Enums.Genero
    password?: StringFieldUpdateOperationsInput | string
    create_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type UsuarioUncheckedUpdateWithoutListaInput = {
    id?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    sobrenome?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    data_nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    genero?: EnumGeneroFieldUpdateOperationsInput | $Enums.Genero
    password?: StringFieldUpdateOperationsInput | string
    create_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type VinhosUpsertWithWhereUniqueWithoutListaInput = {
    where: VinhosWhereUniqueInput
    update: XOR<VinhosUpdateWithoutListaInput, VinhosUncheckedUpdateWithoutListaInput>
    create: XOR<VinhosCreateWithoutListaInput, VinhosUncheckedCreateWithoutListaInput>
  }

  export type VinhosUpdateWithWhereUniqueWithoutListaInput = {
    where: VinhosWhereUniqueInput
    data: XOR<VinhosUpdateWithoutListaInput, VinhosUncheckedUpdateWithoutListaInput>
  }

  export type VinhosUpdateManyWithWhereWithoutListaInput = {
    where: VinhosScalarWhereInput
    data: XOR<VinhosUpdateManyMutationInput, VinhosUncheckedUpdateManyWithoutListaInput>
  }

  export type VinhosScalarWhereInput = {
    AND?: VinhosScalarWhereInput | VinhosScalarWhereInput[]
    OR?: VinhosScalarWhereInput[]
    NOT?: VinhosScalarWhereInput | VinhosScalarWhereInput[]
    id?: IntFilter<"Vinhos"> | number
    nome?: StringFilter<"Vinhos"> | string
    tipo?: StringFilter<"Vinhos"> | string
    uva?: StringFilter<"Vinhos"> | string
    pais?: StringFilter<"Vinhos"> | string
    regiao?: StringFilter<"Vinhos"> | string
    descricao?: StringFilter<"Vinhos"> | string
    IdLista?: StringFilter<"Vinhos"> | string
  }

  export type Minha_ListaCreateWithoutVinhosInput = {
    id?: string
    nome: string
    tipo: string
    uva: string
    pais: string
    regiao: string
    descricao?: string | null
    nota: number
    favorito?: boolean | null
    usuario: UsuarioCreateNestedOneWithoutListaInput
  }

  export type Minha_ListaUncheckedCreateWithoutVinhosInput = {
    id?: string
    nome: string
    tipo: string
    uva: string
    pais: string
    regiao: string
    descricao?: string | null
    nota: number
    favorito?: boolean | null
    IdUsuario: string
  }

  export type Minha_ListaCreateOrConnectWithoutVinhosInput = {
    where: Minha_ListaWhereUniqueInput
    create: XOR<Minha_ListaCreateWithoutVinhosInput, Minha_ListaUncheckedCreateWithoutVinhosInput>
  }

  export type Minha_ListaUpsertWithoutVinhosInput = {
    update: XOR<Minha_ListaUpdateWithoutVinhosInput, Minha_ListaUncheckedUpdateWithoutVinhosInput>
    create: XOR<Minha_ListaCreateWithoutVinhosInput, Minha_ListaUncheckedCreateWithoutVinhosInput>
    where?: Minha_ListaWhereInput
  }

  export type Minha_ListaUpdateToOneWithWhereWithoutVinhosInput = {
    where?: Minha_ListaWhereInput
    data: XOR<Minha_ListaUpdateWithoutVinhosInput, Minha_ListaUncheckedUpdateWithoutVinhosInput>
  }

  export type Minha_ListaUpdateWithoutVinhosInput = {
    id?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    tipo?: StringFieldUpdateOperationsInput | string
    uva?: StringFieldUpdateOperationsInput | string
    pais?: StringFieldUpdateOperationsInput | string
    regiao?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    nota?: IntFieldUpdateOperationsInput | number
    favorito?: NullableBoolFieldUpdateOperationsInput | boolean | null
    usuario?: UsuarioUpdateOneRequiredWithoutListaNestedInput
  }

  export type Minha_ListaUncheckedUpdateWithoutVinhosInput = {
    id?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    tipo?: StringFieldUpdateOperationsInput | string
    uva?: StringFieldUpdateOperationsInput | string
    pais?: StringFieldUpdateOperationsInput | string
    regiao?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    nota?: IntFieldUpdateOperationsInput | number
    favorito?: NullableBoolFieldUpdateOperationsInput | boolean | null
    IdUsuario?: StringFieldUpdateOperationsInput | string
  }

  export type Minha_ListaCreateManyUsuarioInput = {
    id?: string
    nome: string
    tipo: string
    uva: string
    pais: string
    regiao: string
    descricao?: string | null
    nota: number
    favorito?: boolean | null
  }

  export type Minha_ListaUpdateWithoutUsuarioInput = {
    id?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    tipo?: StringFieldUpdateOperationsInput | string
    uva?: StringFieldUpdateOperationsInput | string
    pais?: StringFieldUpdateOperationsInput | string
    regiao?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    nota?: IntFieldUpdateOperationsInput | number
    favorito?: NullableBoolFieldUpdateOperationsInput | boolean | null
    vinhos?: VinhosUpdateManyWithoutListaNestedInput
  }

  export type Minha_ListaUncheckedUpdateWithoutUsuarioInput = {
    id?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    tipo?: StringFieldUpdateOperationsInput | string
    uva?: StringFieldUpdateOperationsInput | string
    pais?: StringFieldUpdateOperationsInput | string
    regiao?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    nota?: IntFieldUpdateOperationsInput | number
    favorito?: NullableBoolFieldUpdateOperationsInput | boolean | null
    vinhos?: VinhosUncheckedUpdateManyWithoutListaNestedInput
  }

  export type Minha_ListaUncheckedUpdateManyWithoutUsuarioInput = {
    id?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    tipo?: StringFieldUpdateOperationsInput | string
    uva?: StringFieldUpdateOperationsInput | string
    pais?: StringFieldUpdateOperationsInput | string
    regiao?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    nota?: IntFieldUpdateOperationsInput | number
    favorito?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type VinhosCreateManyListaInput = {
    id?: number
    nome: string
    tipo: string
    uva: string
    pais: string
    regiao: string
    descricao: string
  }

  export type VinhosUpdateWithoutListaInput = {
    nome?: StringFieldUpdateOperationsInput | string
    tipo?: StringFieldUpdateOperationsInput | string
    uva?: StringFieldUpdateOperationsInput | string
    pais?: StringFieldUpdateOperationsInput | string
    regiao?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
  }

  export type VinhosUncheckedUpdateWithoutListaInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    tipo?: StringFieldUpdateOperationsInput | string
    uva?: StringFieldUpdateOperationsInput | string
    pais?: StringFieldUpdateOperationsInput | string
    regiao?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
  }

  export type VinhosUncheckedUpdateManyWithoutListaInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    tipo?: StringFieldUpdateOperationsInput | string
    uva?: StringFieldUpdateOperationsInput | string
    pais?: StringFieldUpdateOperationsInput | string
    regiao?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}